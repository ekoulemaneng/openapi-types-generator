/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface Paths {
  "/createNotificationConfiguration": {
    post: {
      request: {
        path?: {};
        headers?: {
          "Content-Type"?: "application/json";
          [k: string]: unknown;
        };
        cookies?: {
          [k: string]: unknown;
        };
        query?: {
          [k: string]: unknown;
        };
        body?: {
          configurationDetails: {
            /**
             * Indicates whether the notification subscription is active.
             */
            active?: boolean;
            /**
             * The version of the notification to which you are subscribing. To make sure that your integration can properly process the notification, subscribe to the same version as the API that you're using.
             */
            apiVersion?: number;
            /**
             * A description of the notification subscription configuration.
             */
            description?: string;
            /**
             * Contains objects that define event types and their subscription settings.
             */
            eventConfigs?: {
              /**
               * The type of event.
               *
               * Possible values: **ACCOUNT_CLOSED**, **ACCOUNT_CREATED**, **ACCOUNT_FUNDS_BELOW_THRESHOLD**, **ACCOUNT_HOLDER_CREATED**, **ACCOUNT_HOLDER_LIMIT_REACHED**, **ACCOUNT_HOLDER_PAYOUT**, **ACCOUNT_HOLDER_STATUS_CHANGE**, **ACCOUNT_HOLDER_STORE_STATUS_CHANGE**, **ACCOUNT_HOLDER_UPCOMING_DEADLINE**, **ACCOUNT_HOLDER_UPDATED**, **ACCOUNT_HOLDER_VERIFICATION**, **ACCOUNT_UPDATED**, **BENEFICIARY_SETUP**, **COMPENSATE_NEGATIVE_BALANCE**, **DIRECT_DEBIT_INITIATED**, **PAYMENT_FAILURE**, **REFUND_FUNDS_TRANSFER**, **REPORT_AVAILABLE**, **SCHEDULED_REFUNDS**, **TRANSFER_FUNDS**.
               */
              eventType:
                | "ACCOUNT_CLOSED"
                | "ACCOUNT_CREATED"
                | "ACCOUNT_FUNDS_BELOW_THRESHOLD"
                | "ACCOUNT_HOLDER_CREATED"
                | "ACCOUNT_HOLDER_LIMIT_REACHED"
                | "ACCOUNT_HOLDER_MIGRATED"
                | "ACCOUNT_HOLDER_PAYOUT"
                | "ACCOUNT_HOLDER_STATUS_CHANGE"
                | "ACCOUNT_HOLDER_STORE_STATUS_CHANGE"
                | "ACCOUNT_HOLDER_UPCOMING_DEADLINE"
                | "ACCOUNT_HOLDER_UPDATED"
                | "ACCOUNT_HOLDER_VERIFICATION"
                | "ACCOUNT_UPDATED"
                | "BENEFICIARY_SETUP"
                | "COMPENSATE_NEGATIVE_BALANCE"
                | "DIRECT_DEBIT_INITIATED"
                | "FUNDS_MIGRATED"
                | "PAYMENT_FAILURE"
                | "PENDING_CREDIT"
                | "REFUND_FUNDS_TRANSFER"
                | "REPORT_AVAILABLE"
                | "SCHEDULED_REFUNDS"
                | "SCORE_SIGNAL_TRIGGERED"
                | "TRANSFER_FUNDS"
                | "TRANSFER_NOT_PAIDOUT_TRANSFERS";
              /**
               * Indicates whether the specified `eventType` is sent to your webhook endpoint.
               * Possible values:
               * * **INCLUDE**: Send the specified `eventType`.
               * * **EXCLUDE**: Send all event types except the specified `eventType` and other event types with the `includeMode` set to **EXCLUDE**.
               */
              includeMode: "EXCLUDE" | "INCLUDE";
              [k: string]: unknown;
            }[];
            /**
             * A string with which to salt the notification(s) before hashing. If this field is provided, a hash value will be included under the notification header `HmacSignature` and the hash protocol will be included under the notification header `Protocol`. A notification body along with its `hmacSignatureKey` and `Protocol` can be used to calculate a hash value; matching this hash value with the `HmacSignature` will ensure that the notification body has not been tampered with or corrupted.
             *
             * >Must be a 32-byte hex-encoded string (i.e. a string containing 64 hexadecimal characters; e.g. "b0ea55c2fe60d4d1d605e9c385e0e7f7e6cafbb939ce07010f31a327a0871f27").
             *
             * The omission of this field will preclude the provision of the `HmacSignature` and `Protocol` headers in notification(s).
             */
            hmacSignatureKey?: string;
            /**
             * Adyen-generated ID for the entry, returned in the response when you create a notification configuration. Required when updating an existing configuration using [`/updateNotificationConfiguration`](https://docs.adyen.com/api-explorer/#/NotificationConfigurationService/latest/post/updateNotificationConfiguration).
             */
            notificationId?: number;
            /**
             * The password to use when accessing the notifyURL with the specified username.
             */
            notifyPassword?: string;
            /**
             * The URL to which the notifications are to be sent.
             */
            notifyURL?: string;
            /**
             * The username to use when accessing the notifyURL.
             */
            notifyUsername?: string;
            /**
             * The SSL protocol employed by the endpoint.
             * >Permitted values: `TLSv12`, `TLSv13`.
             */
            sslProtocol?: "TLSv12" | "TLSv13";
            [k: string]: unknown;
          };
          [k: string]: unknown;
        };
      };
      responses:
        | {
            status: "200";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              configurationDetails: {
                /**
                 * Indicates whether the notification subscription is active.
                 */
                active?: boolean;
                /**
                 * The version of the notification to which you are subscribing. To make sure that your integration can properly process the notification, subscribe to the same version as the API that you're using.
                 */
                apiVersion?: number;
                /**
                 * A description of the notification subscription configuration.
                 */
                description?: string;
                /**
                 * Contains objects that define event types and their subscription settings.
                 */
                eventConfigs?: {
                  /**
                   * The type of event.
                   *
                   * Possible values: **ACCOUNT_CLOSED**, **ACCOUNT_CREATED**, **ACCOUNT_FUNDS_BELOW_THRESHOLD**, **ACCOUNT_HOLDER_CREATED**, **ACCOUNT_HOLDER_LIMIT_REACHED**, **ACCOUNT_HOLDER_PAYOUT**, **ACCOUNT_HOLDER_STATUS_CHANGE**, **ACCOUNT_HOLDER_STORE_STATUS_CHANGE**, **ACCOUNT_HOLDER_UPCOMING_DEADLINE**, **ACCOUNT_HOLDER_UPDATED**, **ACCOUNT_HOLDER_VERIFICATION**, **ACCOUNT_UPDATED**, **BENEFICIARY_SETUP**, **COMPENSATE_NEGATIVE_BALANCE**, **DIRECT_DEBIT_INITIATED**, **PAYMENT_FAILURE**, **REFUND_FUNDS_TRANSFER**, **REPORT_AVAILABLE**, **SCHEDULED_REFUNDS**, **TRANSFER_FUNDS**.
                   */
                  eventType:
                    | "ACCOUNT_CLOSED"
                    | "ACCOUNT_CREATED"
                    | "ACCOUNT_FUNDS_BELOW_THRESHOLD"
                    | "ACCOUNT_HOLDER_CREATED"
                    | "ACCOUNT_HOLDER_LIMIT_REACHED"
                    | "ACCOUNT_HOLDER_MIGRATED"
                    | "ACCOUNT_HOLDER_PAYOUT"
                    | "ACCOUNT_HOLDER_STATUS_CHANGE"
                    | "ACCOUNT_HOLDER_STORE_STATUS_CHANGE"
                    | "ACCOUNT_HOLDER_UPCOMING_DEADLINE"
                    | "ACCOUNT_HOLDER_UPDATED"
                    | "ACCOUNT_HOLDER_VERIFICATION"
                    | "ACCOUNT_UPDATED"
                    | "BENEFICIARY_SETUP"
                    | "COMPENSATE_NEGATIVE_BALANCE"
                    | "DIRECT_DEBIT_INITIATED"
                    | "FUNDS_MIGRATED"
                    | "PAYMENT_FAILURE"
                    | "PENDING_CREDIT"
                    | "REFUND_FUNDS_TRANSFER"
                    | "REPORT_AVAILABLE"
                    | "SCHEDULED_REFUNDS"
                    | "SCORE_SIGNAL_TRIGGERED"
                    | "TRANSFER_FUNDS"
                    | "TRANSFER_NOT_PAIDOUT_TRANSFERS";
                  /**
                   * Indicates whether the specified `eventType` is sent to your webhook endpoint.
                   * Possible values:
                   * * **INCLUDE**: Send the specified `eventType`.
                   * * **EXCLUDE**: Send all event types except the specified `eventType` and other event types with the `includeMode` set to **EXCLUDE**.
                   */
                  includeMode: "EXCLUDE" | "INCLUDE";
                  [k: string]: unknown;
                }[];
                /**
                 * A string with which to salt the notification(s) before hashing. If this field is provided, a hash value will be included under the notification header `HmacSignature` and the hash protocol will be included under the notification header `Protocol`. A notification body along with its `hmacSignatureKey` and `Protocol` can be used to calculate a hash value; matching this hash value with the `HmacSignature` will ensure that the notification body has not been tampered with or corrupted.
                 *
                 * >Must be a 32-byte hex-encoded string (i.e. a string containing 64 hexadecimal characters; e.g. "b0ea55c2fe60d4d1d605e9c385e0e7f7e6cafbb939ce07010f31a327a0871f27").
                 *
                 * The omission of this field will preclude the provision of the `HmacSignature` and `Protocol` headers in notification(s).
                 */
                hmacSignatureKey?: string;
                /**
                 * Adyen-generated ID for the entry, returned in the response when you create a notification configuration. Required when updating an existing configuration using [`/updateNotificationConfiguration`](https://docs.adyen.com/api-explorer/#/NotificationConfigurationService/latest/post/updateNotificationConfiguration).
                 */
                notificationId?: number;
                /**
                 * The password to use when accessing the notifyURL with the specified username.
                 */
                notifyPassword?: string;
                /**
                 * The URL to which the notifications are to be sent.
                 */
                notifyURL?: string;
                /**
                 * The username to use when accessing the notifyURL.
                 */
                notifyUsername?: string;
                /**
                 * The SSL protocol employed by the endpoint.
                 * >Permitted values: `TLSv12`, `TLSv13`.
                 */
                sslProtocol?: "TLSv12" | "TLSv13";
                [k: string]: unknown;
              };
              /**
               * Contains field validation errors that would prevent requests from being processed.
               */
              invalidFields?: {
                /**
                 * The validation error code.
                 */
                errorCode?: number;
                /**
                 * A description of the validation error.
                 */
                errorDescription?: string;
                fieldType?: {
                  /**
                   * The full name of the property.
                   */
                  field?: string;
                  /**
                   * The type of the field.
                   */
                  fieldName?:
                    | "accountCode"
                    | "accountHolderCode"
                    | "accountHolderDetails"
                    | "accountNumber"
                    | "accountStateType"
                    | "accountStatus"
                    | "accountType"
                    | "address"
                    | "balanceAccount"
                    | "balanceAccountActive"
                    | "balanceAccountCode"
                    | "balanceAccountId"
                    | "bankAccount"
                    | "bankAccountCode"
                    | "bankAccountName"
                    | "bankAccountUUID"
                    | "bankBicSwift"
                    | "bankCity"
                    | "bankCode"
                    | "bankName"
                    | "bankStatement"
                    | "branchCode"
                    | "businessContact"
                    | "cardToken"
                    | "checkCode"
                    | "city"
                    | "companyRegistration"
                    | "constitutionalDocument"
                    | "controller"
                    | "country"
                    | "countryCode"
                    | "currency"
                    | "currencyCode"
                    | "dateOfBirth"
                    | "description"
                    | "destinationAccountCode"
                    | "document"
                    | "documentContent"
                    | "documentExpirationDate"
                    | "documentIssuerCountry"
                    | "documentIssuerState"
                    | "documentName"
                    | "documentNumber"
                    | "documentType"
                    | "doingBusinessAs"
                    | "drivingLicence"
                    | "drivingLicenceBack"
                    | "drivingLicenceFront"
                    | "drivingLicense"
                    | "email"
                    | "firstName"
                    | "formType"
                    | "fullPhoneNumber"
                    | "gender"
                    | "hopWebserviceUser"
                    | "houseNumberOrName"
                    | "iban"
                    | "idCard"
                    | "idCardBack"
                    | "idCardFront"
                    | "idNumber"
                    | "identityDocument"
                    | "individualDetails"
                    | "infix"
                    | "jobTitle"
                    | "lastName"
                    | "lastReviewDate"
                    | "legalArrangement"
                    | "legalArrangementCode"
                    | "legalArrangementEntity"
                    | "legalArrangementEntityCode"
                    | "legalArrangementLegalForm"
                    | "legalArrangementMember"
                    | "legalArrangementMembers"
                    | "legalArrangementName"
                    | "legalArrangementReference"
                    | "legalArrangementRegistrationNumber"
                    | "legalArrangementTaxNumber"
                    | "legalArrangementType"
                    | "legalBusinessName"
                    | "legalEntity"
                    | "legalEntityType"
                    | "logo"
                    | "merchantAccount"
                    | "merchantCategoryCode"
                    | "merchantHouseNumber"
                    | "merchantReference"
                    | "microDeposit"
                    | "name"
                    | "nationality"
                    | "originalReference"
                    | "ownerCity"
                    | "ownerCountryCode"
                    | "ownerDateOfBirth"
                    | "ownerHouseNumberOrName"
                    | "ownerName"
                    | "ownerPostalCode"
                    | "ownerState"
                    | "ownerStreet"
                    | "passport"
                    | "passportNumber"
                    | "payoutMethodCode"
                    | "payoutSchedule"
                    | "pciSelfAssessment"
                    | "personalData"
                    | "phoneCountryCode"
                    | "phoneNumber"
                    | "postalCode"
                    | "primaryCurrency"
                    | "reason"
                    | "registrationNumber"
                    | "returnUrl"
                    | "schedule"
                    | "shareholder"
                    | "shareholderCode"
                    | "shareholderCodeAndSignatoryCode"
                    | "shareholderCodeOrSignatoryCode"
                    | "shareholderType"
                    | "shareholderTypes"
                    | "shopperInteraction"
                    | "signatory"
                    | "signatoryCode"
                    | "socialSecurityNumber"
                    | "sourceAccountCode"
                    | "splitAccount"
                    | "splitConfigurationUUID"
                    | "splitCurrency"
                    | "splitValue"
                    | "splits"
                    | "stateOrProvince"
                    | "status"
                    | "stockExchange"
                    | "stockNumber"
                    | "stockTicker"
                    | "store"
                    | "storeDetail"
                    | "storeName"
                    | "storeReference"
                    | "street"
                    | "taxId"
                    | "tier"
                    | "tierNumber"
                    | "transferCode"
                    | "ultimateParentCompany"
                    | "ultimateParentCompanyAddressDetails"
                    | "ultimateParentCompanyAddressDetailsCountry"
                    | "ultimateParentCompanyBusinessDetails"
                    | "ultimateParentCompanyBusinessDetailsLegalBusinessName"
                    | "ultimateParentCompanyBusinessDetailsRegistrationNumber"
                    | "ultimateParentCompanyCode"
                    | "ultimateParentCompanyStockExchange"
                    | "ultimateParentCompanyStockNumber"
                    | "ultimateParentCompanyStockNumberOrStockTicker"
                    | "ultimateParentCompanyStockTicker"
                    | "unknown"
                    | "value"
                    | "verificationType"
                    | "virtualAccount"
                    | "visaNumber"
                    | "webAddress"
                    | "year";
                  /**
                   * The code of the shareholder that the field belongs to. If empty, the field belongs to an account holder.
                   */
                  shareholderCode?: string;
                  [k: string]: unknown;
                };
                [k: string]: unknown;
              }[];
              /**
               * The reference of a request. Can be used to uniquely identify the request.
               */
              pspReference?: string;
              /**
               * The result code.
               */
              resultCode?: string;
              [k: string]: unknown;
            };
          }
        | {
            status: "400";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "401";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "403";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "422";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "500";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          };
    };
  };
  "/deleteNotificationConfigurations": {
    post: {
      request: {
        path?: {};
        headers?: {
          "Content-Type"?: "application/json";
          [k: string]: unknown;
        };
        cookies?: {
          [k: string]: unknown;
        };
        query?: {
          [k: string]: unknown;
        };
        body?: {
          /**
           * A list of IDs of the notification subscription configurations to be deleted.
           */
          notificationIds: number[];
          [k: string]: unknown;
        };
      };
      responses:
        | {
            status: "200";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * Contains field validation errors that would prevent requests from being processed.
               */
              invalidFields?: {
                /**
                 * The validation error code.
                 */
                errorCode?: number;
                /**
                 * A description of the validation error.
                 */
                errorDescription?: string;
                fieldType?: {
                  /**
                   * The full name of the property.
                   */
                  field?: string;
                  /**
                   * The type of the field.
                   */
                  fieldName?:
                    | "accountCode"
                    | "accountHolderCode"
                    | "accountHolderDetails"
                    | "accountNumber"
                    | "accountStateType"
                    | "accountStatus"
                    | "accountType"
                    | "address"
                    | "balanceAccount"
                    | "balanceAccountActive"
                    | "balanceAccountCode"
                    | "balanceAccountId"
                    | "bankAccount"
                    | "bankAccountCode"
                    | "bankAccountName"
                    | "bankAccountUUID"
                    | "bankBicSwift"
                    | "bankCity"
                    | "bankCode"
                    | "bankName"
                    | "bankStatement"
                    | "branchCode"
                    | "businessContact"
                    | "cardToken"
                    | "checkCode"
                    | "city"
                    | "companyRegistration"
                    | "constitutionalDocument"
                    | "controller"
                    | "country"
                    | "countryCode"
                    | "currency"
                    | "currencyCode"
                    | "dateOfBirth"
                    | "description"
                    | "destinationAccountCode"
                    | "document"
                    | "documentContent"
                    | "documentExpirationDate"
                    | "documentIssuerCountry"
                    | "documentIssuerState"
                    | "documentName"
                    | "documentNumber"
                    | "documentType"
                    | "doingBusinessAs"
                    | "drivingLicence"
                    | "drivingLicenceBack"
                    | "drivingLicenceFront"
                    | "drivingLicense"
                    | "email"
                    | "firstName"
                    | "formType"
                    | "fullPhoneNumber"
                    | "gender"
                    | "hopWebserviceUser"
                    | "houseNumberOrName"
                    | "iban"
                    | "idCard"
                    | "idCardBack"
                    | "idCardFront"
                    | "idNumber"
                    | "identityDocument"
                    | "individualDetails"
                    | "infix"
                    | "jobTitle"
                    | "lastName"
                    | "lastReviewDate"
                    | "legalArrangement"
                    | "legalArrangementCode"
                    | "legalArrangementEntity"
                    | "legalArrangementEntityCode"
                    | "legalArrangementLegalForm"
                    | "legalArrangementMember"
                    | "legalArrangementMembers"
                    | "legalArrangementName"
                    | "legalArrangementReference"
                    | "legalArrangementRegistrationNumber"
                    | "legalArrangementTaxNumber"
                    | "legalArrangementType"
                    | "legalBusinessName"
                    | "legalEntity"
                    | "legalEntityType"
                    | "logo"
                    | "merchantAccount"
                    | "merchantCategoryCode"
                    | "merchantHouseNumber"
                    | "merchantReference"
                    | "microDeposit"
                    | "name"
                    | "nationality"
                    | "originalReference"
                    | "ownerCity"
                    | "ownerCountryCode"
                    | "ownerDateOfBirth"
                    | "ownerHouseNumberOrName"
                    | "ownerName"
                    | "ownerPostalCode"
                    | "ownerState"
                    | "ownerStreet"
                    | "passport"
                    | "passportNumber"
                    | "payoutMethodCode"
                    | "payoutSchedule"
                    | "pciSelfAssessment"
                    | "personalData"
                    | "phoneCountryCode"
                    | "phoneNumber"
                    | "postalCode"
                    | "primaryCurrency"
                    | "reason"
                    | "registrationNumber"
                    | "returnUrl"
                    | "schedule"
                    | "shareholder"
                    | "shareholderCode"
                    | "shareholderCodeAndSignatoryCode"
                    | "shareholderCodeOrSignatoryCode"
                    | "shareholderType"
                    | "shareholderTypes"
                    | "shopperInteraction"
                    | "signatory"
                    | "signatoryCode"
                    | "socialSecurityNumber"
                    | "sourceAccountCode"
                    | "splitAccount"
                    | "splitConfigurationUUID"
                    | "splitCurrency"
                    | "splitValue"
                    | "splits"
                    | "stateOrProvince"
                    | "status"
                    | "stockExchange"
                    | "stockNumber"
                    | "stockTicker"
                    | "store"
                    | "storeDetail"
                    | "storeName"
                    | "storeReference"
                    | "street"
                    | "taxId"
                    | "tier"
                    | "tierNumber"
                    | "transferCode"
                    | "ultimateParentCompany"
                    | "ultimateParentCompanyAddressDetails"
                    | "ultimateParentCompanyAddressDetailsCountry"
                    | "ultimateParentCompanyBusinessDetails"
                    | "ultimateParentCompanyBusinessDetailsLegalBusinessName"
                    | "ultimateParentCompanyBusinessDetailsRegistrationNumber"
                    | "ultimateParentCompanyCode"
                    | "ultimateParentCompanyStockExchange"
                    | "ultimateParentCompanyStockNumber"
                    | "ultimateParentCompanyStockNumberOrStockTicker"
                    | "ultimateParentCompanyStockTicker"
                    | "unknown"
                    | "value"
                    | "verificationType"
                    | "virtualAccount"
                    | "visaNumber"
                    | "webAddress"
                    | "year";
                  /**
                   * The code of the shareholder that the field belongs to. If empty, the field belongs to an account holder.
                   */
                  shareholderCode?: string;
                  [k: string]: unknown;
                };
                [k: string]: unknown;
              }[];
              /**
               * The reference of a request. Can be used to uniquely identify the request.
               */
              pspReference?: string;
              /**
               * The result code.
               */
              resultCode?: string;
              [k: string]: unknown;
            };
          }
        | {
            status: "400";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "401";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "403";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "422";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "500";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          };
    };
  };
  "/getNotificationConfiguration": {
    post: {
      request: {
        path?: {};
        headers?: {
          "Content-Type"?: "application/json";
          [k: string]: unknown;
        };
        cookies?: {
          [k: string]: unknown;
        };
        query?: {
          [k: string]: unknown;
        };
        body?: {
          /**
           * The ID of the notification subscription configuration whose details are to be retrieved.
           */
          notificationId: number;
          [k: string]: unknown;
        };
      };
      responses:
        | {
            status: "200";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              configurationDetails: {
                /**
                 * Indicates whether the notification subscription is active.
                 */
                active?: boolean;
                /**
                 * The version of the notification to which you are subscribing. To make sure that your integration can properly process the notification, subscribe to the same version as the API that you're using.
                 */
                apiVersion?: number;
                /**
                 * A description of the notification subscription configuration.
                 */
                description?: string;
                /**
                 * Contains objects that define event types and their subscription settings.
                 */
                eventConfigs?: {
                  /**
                   * The type of event.
                   *
                   * Possible values: **ACCOUNT_CLOSED**, **ACCOUNT_CREATED**, **ACCOUNT_FUNDS_BELOW_THRESHOLD**, **ACCOUNT_HOLDER_CREATED**, **ACCOUNT_HOLDER_LIMIT_REACHED**, **ACCOUNT_HOLDER_PAYOUT**, **ACCOUNT_HOLDER_STATUS_CHANGE**, **ACCOUNT_HOLDER_STORE_STATUS_CHANGE**, **ACCOUNT_HOLDER_UPCOMING_DEADLINE**, **ACCOUNT_HOLDER_UPDATED**, **ACCOUNT_HOLDER_VERIFICATION**, **ACCOUNT_UPDATED**, **BENEFICIARY_SETUP**, **COMPENSATE_NEGATIVE_BALANCE**, **DIRECT_DEBIT_INITIATED**, **PAYMENT_FAILURE**, **REFUND_FUNDS_TRANSFER**, **REPORT_AVAILABLE**, **SCHEDULED_REFUNDS**, **TRANSFER_FUNDS**.
                   */
                  eventType:
                    | "ACCOUNT_CLOSED"
                    | "ACCOUNT_CREATED"
                    | "ACCOUNT_FUNDS_BELOW_THRESHOLD"
                    | "ACCOUNT_HOLDER_CREATED"
                    | "ACCOUNT_HOLDER_LIMIT_REACHED"
                    | "ACCOUNT_HOLDER_MIGRATED"
                    | "ACCOUNT_HOLDER_PAYOUT"
                    | "ACCOUNT_HOLDER_STATUS_CHANGE"
                    | "ACCOUNT_HOLDER_STORE_STATUS_CHANGE"
                    | "ACCOUNT_HOLDER_UPCOMING_DEADLINE"
                    | "ACCOUNT_HOLDER_UPDATED"
                    | "ACCOUNT_HOLDER_VERIFICATION"
                    | "ACCOUNT_UPDATED"
                    | "BENEFICIARY_SETUP"
                    | "COMPENSATE_NEGATIVE_BALANCE"
                    | "DIRECT_DEBIT_INITIATED"
                    | "FUNDS_MIGRATED"
                    | "PAYMENT_FAILURE"
                    | "PENDING_CREDIT"
                    | "REFUND_FUNDS_TRANSFER"
                    | "REPORT_AVAILABLE"
                    | "SCHEDULED_REFUNDS"
                    | "SCORE_SIGNAL_TRIGGERED"
                    | "TRANSFER_FUNDS"
                    | "TRANSFER_NOT_PAIDOUT_TRANSFERS";
                  /**
                   * Indicates whether the specified `eventType` is sent to your webhook endpoint.
                   * Possible values:
                   * * **INCLUDE**: Send the specified `eventType`.
                   * * **EXCLUDE**: Send all event types except the specified `eventType` and other event types with the `includeMode` set to **EXCLUDE**.
                   */
                  includeMode: "EXCLUDE" | "INCLUDE";
                  [k: string]: unknown;
                }[];
                /**
                 * A string with which to salt the notification(s) before hashing. If this field is provided, a hash value will be included under the notification header `HmacSignature` and the hash protocol will be included under the notification header `Protocol`. A notification body along with its `hmacSignatureKey` and `Protocol` can be used to calculate a hash value; matching this hash value with the `HmacSignature` will ensure that the notification body has not been tampered with or corrupted.
                 *
                 * >Must be a 32-byte hex-encoded string (i.e. a string containing 64 hexadecimal characters; e.g. "b0ea55c2fe60d4d1d605e9c385e0e7f7e6cafbb939ce07010f31a327a0871f27").
                 *
                 * The omission of this field will preclude the provision of the `HmacSignature` and `Protocol` headers in notification(s).
                 */
                hmacSignatureKey?: string;
                /**
                 * Adyen-generated ID for the entry, returned in the response when you create a notification configuration. Required when updating an existing configuration using [`/updateNotificationConfiguration`](https://docs.adyen.com/api-explorer/#/NotificationConfigurationService/latest/post/updateNotificationConfiguration).
                 */
                notificationId?: number;
                /**
                 * The password to use when accessing the notifyURL with the specified username.
                 */
                notifyPassword?: string;
                /**
                 * The URL to which the notifications are to be sent.
                 */
                notifyURL?: string;
                /**
                 * The username to use when accessing the notifyURL.
                 */
                notifyUsername?: string;
                /**
                 * The SSL protocol employed by the endpoint.
                 * >Permitted values: `TLSv12`, `TLSv13`.
                 */
                sslProtocol?: "TLSv12" | "TLSv13";
                [k: string]: unknown;
              };
              /**
               * Contains field validation errors that would prevent requests from being processed.
               */
              invalidFields?: {
                /**
                 * The validation error code.
                 */
                errorCode?: number;
                /**
                 * A description of the validation error.
                 */
                errorDescription?: string;
                fieldType?: {
                  /**
                   * The full name of the property.
                   */
                  field?: string;
                  /**
                   * The type of the field.
                   */
                  fieldName?:
                    | "accountCode"
                    | "accountHolderCode"
                    | "accountHolderDetails"
                    | "accountNumber"
                    | "accountStateType"
                    | "accountStatus"
                    | "accountType"
                    | "address"
                    | "balanceAccount"
                    | "balanceAccountActive"
                    | "balanceAccountCode"
                    | "balanceAccountId"
                    | "bankAccount"
                    | "bankAccountCode"
                    | "bankAccountName"
                    | "bankAccountUUID"
                    | "bankBicSwift"
                    | "bankCity"
                    | "bankCode"
                    | "bankName"
                    | "bankStatement"
                    | "branchCode"
                    | "businessContact"
                    | "cardToken"
                    | "checkCode"
                    | "city"
                    | "companyRegistration"
                    | "constitutionalDocument"
                    | "controller"
                    | "country"
                    | "countryCode"
                    | "currency"
                    | "currencyCode"
                    | "dateOfBirth"
                    | "description"
                    | "destinationAccountCode"
                    | "document"
                    | "documentContent"
                    | "documentExpirationDate"
                    | "documentIssuerCountry"
                    | "documentIssuerState"
                    | "documentName"
                    | "documentNumber"
                    | "documentType"
                    | "doingBusinessAs"
                    | "drivingLicence"
                    | "drivingLicenceBack"
                    | "drivingLicenceFront"
                    | "drivingLicense"
                    | "email"
                    | "firstName"
                    | "formType"
                    | "fullPhoneNumber"
                    | "gender"
                    | "hopWebserviceUser"
                    | "houseNumberOrName"
                    | "iban"
                    | "idCard"
                    | "idCardBack"
                    | "idCardFront"
                    | "idNumber"
                    | "identityDocument"
                    | "individualDetails"
                    | "infix"
                    | "jobTitle"
                    | "lastName"
                    | "lastReviewDate"
                    | "legalArrangement"
                    | "legalArrangementCode"
                    | "legalArrangementEntity"
                    | "legalArrangementEntityCode"
                    | "legalArrangementLegalForm"
                    | "legalArrangementMember"
                    | "legalArrangementMembers"
                    | "legalArrangementName"
                    | "legalArrangementReference"
                    | "legalArrangementRegistrationNumber"
                    | "legalArrangementTaxNumber"
                    | "legalArrangementType"
                    | "legalBusinessName"
                    | "legalEntity"
                    | "legalEntityType"
                    | "logo"
                    | "merchantAccount"
                    | "merchantCategoryCode"
                    | "merchantHouseNumber"
                    | "merchantReference"
                    | "microDeposit"
                    | "name"
                    | "nationality"
                    | "originalReference"
                    | "ownerCity"
                    | "ownerCountryCode"
                    | "ownerDateOfBirth"
                    | "ownerHouseNumberOrName"
                    | "ownerName"
                    | "ownerPostalCode"
                    | "ownerState"
                    | "ownerStreet"
                    | "passport"
                    | "passportNumber"
                    | "payoutMethodCode"
                    | "payoutSchedule"
                    | "pciSelfAssessment"
                    | "personalData"
                    | "phoneCountryCode"
                    | "phoneNumber"
                    | "postalCode"
                    | "primaryCurrency"
                    | "reason"
                    | "registrationNumber"
                    | "returnUrl"
                    | "schedule"
                    | "shareholder"
                    | "shareholderCode"
                    | "shareholderCodeAndSignatoryCode"
                    | "shareholderCodeOrSignatoryCode"
                    | "shareholderType"
                    | "shareholderTypes"
                    | "shopperInteraction"
                    | "signatory"
                    | "signatoryCode"
                    | "socialSecurityNumber"
                    | "sourceAccountCode"
                    | "splitAccount"
                    | "splitConfigurationUUID"
                    | "splitCurrency"
                    | "splitValue"
                    | "splits"
                    | "stateOrProvince"
                    | "status"
                    | "stockExchange"
                    | "stockNumber"
                    | "stockTicker"
                    | "store"
                    | "storeDetail"
                    | "storeName"
                    | "storeReference"
                    | "street"
                    | "taxId"
                    | "tier"
                    | "tierNumber"
                    | "transferCode"
                    | "ultimateParentCompany"
                    | "ultimateParentCompanyAddressDetails"
                    | "ultimateParentCompanyAddressDetailsCountry"
                    | "ultimateParentCompanyBusinessDetails"
                    | "ultimateParentCompanyBusinessDetailsLegalBusinessName"
                    | "ultimateParentCompanyBusinessDetailsRegistrationNumber"
                    | "ultimateParentCompanyCode"
                    | "ultimateParentCompanyStockExchange"
                    | "ultimateParentCompanyStockNumber"
                    | "ultimateParentCompanyStockNumberOrStockTicker"
                    | "ultimateParentCompanyStockTicker"
                    | "unknown"
                    | "value"
                    | "verificationType"
                    | "virtualAccount"
                    | "visaNumber"
                    | "webAddress"
                    | "year";
                  /**
                   * The code of the shareholder that the field belongs to. If empty, the field belongs to an account holder.
                   */
                  shareholderCode?: string;
                  [k: string]: unknown;
                };
                [k: string]: unknown;
              }[];
              /**
               * The reference of a request. Can be used to uniquely identify the request.
               */
              pspReference?: string;
              /**
               * The result code.
               */
              resultCode?: string;
              [k: string]: unknown;
            };
          }
        | {
            status: "400";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "401";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "403";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "422";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "500";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          };
    };
  };
  "/getNotificationConfigurationList": {
    post: {
      request: {
        path?: {};
        headers?: {
          "Content-Type"?: "application/json";
          [k: string]: unknown;
        };
        cookies?: {
          [k: string]: unknown;
        };
        query?: {
          [k: string]: unknown;
        };
        body?: {
          [k: string]: unknown;
        };
      };
      responses:
        | {
            status: "200";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * Details of the notification subscription configurations.
               */
              configurations?: {
                /**
                 * Indicates whether the notification subscription is active.
                 */
                active?: boolean;
                /**
                 * The version of the notification to which you are subscribing. To make sure that your integration can properly process the notification, subscribe to the same version as the API that you're using.
                 */
                apiVersion?: number;
                /**
                 * A description of the notification subscription configuration.
                 */
                description?: string;
                /**
                 * Contains objects that define event types and their subscription settings.
                 */
                eventConfigs?: {
                  /**
                   * The type of event.
                   *
                   * Possible values: **ACCOUNT_CLOSED**, **ACCOUNT_CREATED**, **ACCOUNT_FUNDS_BELOW_THRESHOLD**, **ACCOUNT_HOLDER_CREATED**, **ACCOUNT_HOLDER_LIMIT_REACHED**, **ACCOUNT_HOLDER_PAYOUT**, **ACCOUNT_HOLDER_STATUS_CHANGE**, **ACCOUNT_HOLDER_STORE_STATUS_CHANGE**, **ACCOUNT_HOLDER_UPCOMING_DEADLINE**, **ACCOUNT_HOLDER_UPDATED**, **ACCOUNT_HOLDER_VERIFICATION**, **ACCOUNT_UPDATED**, **BENEFICIARY_SETUP**, **COMPENSATE_NEGATIVE_BALANCE**, **DIRECT_DEBIT_INITIATED**, **PAYMENT_FAILURE**, **REFUND_FUNDS_TRANSFER**, **REPORT_AVAILABLE**, **SCHEDULED_REFUNDS**, **TRANSFER_FUNDS**.
                   */
                  eventType:
                    | "ACCOUNT_CLOSED"
                    | "ACCOUNT_CREATED"
                    | "ACCOUNT_FUNDS_BELOW_THRESHOLD"
                    | "ACCOUNT_HOLDER_CREATED"
                    | "ACCOUNT_HOLDER_LIMIT_REACHED"
                    | "ACCOUNT_HOLDER_MIGRATED"
                    | "ACCOUNT_HOLDER_PAYOUT"
                    | "ACCOUNT_HOLDER_STATUS_CHANGE"
                    | "ACCOUNT_HOLDER_STORE_STATUS_CHANGE"
                    | "ACCOUNT_HOLDER_UPCOMING_DEADLINE"
                    | "ACCOUNT_HOLDER_UPDATED"
                    | "ACCOUNT_HOLDER_VERIFICATION"
                    | "ACCOUNT_UPDATED"
                    | "BENEFICIARY_SETUP"
                    | "COMPENSATE_NEGATIVE_BALANCE"
                    | "DIRECT_DEBIT_INITIATED"
                    | "FUNDS_MIGRATED"
                    | "PAYMENT_FAILURE"
                    | "PENDING_CREDIT"
                    | "REFUND_FUNDS_TRANSFER"
                    | "REPORT_AVAILABLE"
                    | "SCHEDULED_REFUNDS"
                    | "SCORE_SIGNAL_TRIGGERED"
                    | "TRANSFER_FUNDS"
                    | "TRANSFER_NOT_PAIDOUT_TRANSFERS";
                  /**
                   * Indicates whether the specified `eventType` is sent to your webhook endpoint.
                   * Possible values:
                   * * **INCLUDE**: Send the specified `eventType`.
                   * * **EXCLUDE**: Send all event types except the specified `eventType` and other event types with the `includeMode` set to **EXCLUDE**.
                   */
                  includeMode: "EXCLUDE" | "INCLUDE";
                  [k: string]: unknown;
                }[];
                /**
                 * A string with which to salt the notification(s) before hashing. If this field is provided, a hash value will be included under the notification header `HmacSignature` and the hash protocol will be included under the notification header `Protocol`. A notification body along with its `hmacSignatureKey` and `Protocol` can be used to calculate a hash value; matching this hash value with the `HmacSignature` will ensure that the notification body has not been tampered with or corrupted.
                 *
                 * >Must be a 32-byte hex-encoded string (i.e. a string containing 64 hexadecimal characters; e.g. "b0ea55c2fe60d4d1d605e9c385e0e7f7e6cafbb939ce07010f31a327a0871f27").
                 *
                 * The omission of this field will preclude the provision of the `HmacSignature` and `Protocol` headers in notification(s).
                 */
                hmacSignatureKey?: string;
                /**
                 * Adyen-generated ID for the entry, returned in the response when you create a notification configuration. Required when updating an existing configuration using [`/updateNotificationConfiguration`](https://docs.adyen.com/api-explorer/#/NotificationConfigurationService/latest/post/updateNotificationConfiguration).
                 */
                notificationId?: number;
                /**
                 * The password to use when accessing the notifyURL with the specified username.
                 */
                notifyPassword?: string;
                /**
                 * The URL to which the notifications are to be sent.
                 */
                notifyURL?: string;
                /**
                 * The username to use when accessing the notifyURL.
                 */
                notifyUsername?: string;
                /**
                 * The SSL protocol employed by the endpoint.
                 * >Permitted values: `TLSv12`, `TLSv13`.
                 */
                sslProtocol?: "TLSv12" | "TLSv13";
                [k: string]: unknown;
              }[];
              /**
               * Contains field validation errors that would prevent requests from being processed.
               */
              invalidFields?: {
                /**
                 * The validation error code.
                 */
                errorCode?: number;
                /**
                 * A description of the validation error.
                 */
                errorDescription?: string;
                fieldType?: {
                  /**
                   * The full name of the property.
                   */
                  field?: string;
                  /**
                   * The type of the field.
                   */
                  fieldName?:
                    | "accountCode"
                    | "accountHolderCode"
                    | "accountHolderDetails"
                    | "accountNumber"
                    | "accountStateType"
                    | "accountStatus"
                    | "accountType"
                    | "address"
                    | "balanceAccount"
                    | "balanceAccountActive"
                    | "balanceAccountCode"
                    | "balanceAccountId"
                    | "bankAccount"
                    | "bankAccountCode"
                    | "bankAccountName"
                    | "bankAccountUUID"
                    | "bankBicSwift"
                    | "bankCity"
                    | "bankCode"
                    | "bankName"
                    | "bankStatement"
                    | "branchCode"
                    | "businessContact"
                    | "cardToken"
                    | "checkCode"
                    | "city"
                    | "companyRegistration"
                    | "constitutionalDocument"
                    | "controller"
                    | "country"
                    | "countryCode"
                    | "currency"
                    | "currencyCode"
                    | "dateOfBirth"
                    | "description"
                    | "destinationAccountCode"
                    | "document"
                    | "documentContent"
                    | "documentExpirationDate"
                    | "documentIssuerCountry"
                    | "documentIssuerState"
                    | "documentName"
                    | "documentNumber"
                    | "documentType"
                    | "doingBusinessAs"
                    | "drivingLicence"
                    | "drivingLicenceBack"
                    | "drivingLicenceFront"
                    | "drivingLicense"
                    | "email"
                    | "firstName"
                    | "formType"
                    | "fullPhoneNumber"
                    | "gender"
                    | "hopWebserviceUser"
                    | "houseNumberOrName"
                    | "iban"
                    | "idCard"
                    | "idCardBack"
                    | "idCardFront"
                    | "idNumber"
                    | "identityDocument"
                    | "individualDetails"
                    | "infix"
                    | "jobTitle"
                    | "lastName"
                    | "lastReviewDate"
                    | "legalArrangement"
                    | "legalArrangementCode"
                    | "legalArrangementEntity"
                    | "legalArrangementEntityCode"
                    | "legalArrangementLegalForm"
                    | "legalArrangementMember"
                    | "legalArrangementMembers"
                    | "legalArrangementName"
                    | "legalArrangementReference"
                    | "legalArrangementRegistrationNumber"
                    | "legalArrangementTaxNumber"
                    | "legalArrangementType"
                    | "legalBusinessName"
                    | "legalEntity"
                    | "legalEntityType"
                    | "logo"
                    | "merchantAccount"
                    | "merchantCategoryCode"
                    | "merchantHouseNumber"
                    | "merchantReference"
                    | "microDeposit"
                    | "name"
                    | "nationality"
                    | "originalReference"
                    | "ownerCity"
                    | "ownerCountryCode"
                    | "ownerDateOfBirth"
                    | "ownerHouseNumberOrName"
                    | "ownerName"
                    | "ownerPostalCode"
                    | "ownerState"
                    | "ownerStreet"
                    | "passport"
                    | "passportNumber"
                    | "payoutMethodCode"
                    | "payoutSchedule"
                    | "pciSelfAssessment"
                    | "personalData"
                    | "phoneCountryCode"
                    | "phoneNumber"
                    | "postalCode"
                    | "primaryCurrency"
                    | "reason"
                    | "registrationNumber"
                    | "returnUrl"
                    | "schedule"
                    | "shareholder"
                    | "shareholderCode"
                    | "shareholderCodeAndSignatoryCode"
                    | "shareholderCodeOrSignatoryCode"
                    | "shareholderType"
                    | "shareholderTypes"
                    | "shopperInteraction"
                    | "signatory"
                    | "signatoryCode"
                    | "socialSecurityNumber"
                    | "sourceAccountCode"
                    | "splitAccount"
                    | "splitConfigurationUUID"
                    | "splitCurrency"
                    | "splitValue"
                    | "splits"
                    | "stateOrProvince"
                    | "status"
                    | "stockExchange"
                    | "stockNumber"
                    | "stockTicker"
                    | "store"
                    | "storeDetail"
                    | "storeName"
                    | "storeReference"
                    | "street"
                    | "taxId"
                    | "tier"
                    | "tierNumber"
                    | "transferCode"
                    | "ultimateParentCompany"
                    | "ultimateParentCompanyAddressDetails"
                    | "ultimateParentCompanyAddressDetailsCountry"
                    | "ultimateParentCompanyBusinessDetails"
                    | "ultimateParentCompanyBusinessDetailsLegalBusinessName"
                    | "ultimateParentCompanyBusinessDetailsRegistrationNumber"
                    | "ultimateParentCompanyCode"
                    | "ultimateParentCompanyStockExchange"
                    | "ultimateParentCompanyStockNumber"
                    | "ultimateParentCompanyStockNumberOrStockTicker"
                    | "ultimateParentCompanyStockTicker"
                    | "unknown"
                    | "value"
                    | "verificationType"
                    | "virtualAccount"
                    | "visaNumber"
                    | "webAddress"
                    | "year";
                  /**
                   * The code of the shareholder that the field belongs to. If empty, the field belongs to an account holder.
                   */
                  shareholderCode?: string;
                  [k: string]: unknown;
                };
                [k: string]: unknown;
              }[];
              /**
               * The reference of a request. Can be used to uniquely identify the request.
               */
              pspReference?: string;
              /**
               * The result code.
               */
              resultCode?: string;
              [k: string]: unknown;
            };
          }
        | {
            status: "400";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "401";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "403";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "422";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "500";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          };
    };
  };
  "/testNotificationConfiguration": {
    post: {
      request: {
        path?: {};
        headers?: {
          "Content-Type"?: "application/json";
          [k: string]: unknown;
        };
        cookies?: {
          [k: string]: unknown;
        };
        query?: {
          [k: string]: unknown;
        };
        body?: {
          /**
           * The event types to test.  If left blank, then all of the configured event types will be tested.
           * >Permitted values: `ACCOUNT_HOLDER_CREATED`, `ACCOUNT_CREATED`, `ACCOUNT_UPDATED`, `ACCOUNT_HOLDER_UPDATED`, `ACCOUNT_HOLDER_STATUS_CHANGE`, `ACCOUNT_HOLDER_STORE_STATUS_CHANGE` `ACCOUNT_HOLDER_VERIFICATION`, `ACCOUNT_HOLDER_LIMIT_REACHED`, `ACCOUNT_HOLDER_PAYOUT`, `PAYMENT_FAILURE`, `SCHEDULED_REFUNDS`, `REPORT_AVAILABLE`, `TRANSFER_FUNDS`, `BENEFICIARY_SETUP`, `COMPENSATE_NEGATIVE_BALANCE`.
           */
          eventTypes?: (
            | "ACCOUNT_CLOSED"
            | "ACCOUNT_CREATED"
            | "ACCOUNT_FUNDS_BELOW_THRESHOLD"
            | "ACCOUNT_HOLDER_CREATED"
            | "ACCOUNT_HOLDER_LIMIT_REACHED"
            | "ACCOUNT_HOLDER_MIGRATED"
            | "ACCOUNT_HOLDER_PAYOUT"
            | "ACCOUNT_HOLDER_STATUS_CHANGE"
            | "ACCOUNT_HOLDER_STORE_STATUS_CHANGE"
            | "ACCOUNT_HOLDER_UPCOMING_DEADLINE"
            | "ACCOUNT_HOLDER_UPDATED"
            | "ACCOUNT_HOLDER_VERIFICATION"
            | "ACCOUNT_UPDATED"
            | "BENEFICIARY_SETUP"
            | "COMPENSATE_NEGATIVE_BALANCE"
            | "DIRECT_DEBIT_INITIATED"
            | "FUNDS_MIGRATED"
            | "PAYMENT_FAILURE"
            | "PENDING_CREDIT"
            | "REFUND_FUNDS_TRANSFER"
            | "REPORT_AVAILABLE"
            | "SCHEDULED_REFUNDS"
            | "SCORE_SIGNAL_TRIGGERED"
            | "TRANSFER_FUNDS"
            | "TRANSFER_NOT_PAIDOUT_TRANSFERS"
          )[];
          /**
           * The ID of the notification subscription configuration to be tested.
           */
          notificationId: number;
          [k: string]: unknown;
        };
      };
      responses:
        | {
            status: "200";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * Any error messages encountered.
               */
              errorMessages?: string[];
              /**
               * The event types that were tested.
               * >Permitted values: `ACCOUNT_HOLDER_CREATED`, `ACCOUNT_CREATED`, `ACCOUNT_UPDATED`, `ACCOUNT_HOLDER_UPDATED`, `ACCOUNT_HOLDER_STATUS_CHANGE`, `ACCOUNT_HOLDER_STORE_STATUS_CHANGE` `ACCOUNT_HOLDER_VERIFICATION`, `ACCOUNT_HOLDER_LIMIT_REACHED`, `ACCOUNT_HOLDER_PAYOUT`, `PAYMENT_FAILURE`, `SCHEDULED_REFUNDS`, `REPORT_AVAILABLE`, `TRANSFER_FUNDS`, `BENEFICIARY_SETUP`, `COMPENSATE_NEGATIVE_BALANCE`.
               */
              eventTypes?: (
                | "ACCOUNT_CLOSED"
                | "ACCOUNT_CREATED"
                | "ACCOUNT_FUNDS_BELOW_THRESHOLD"
                | "ACCOUNT_HOLDER_CREATED"
                | "ACCOUNT_HOLDER_LIMIT_REACHED"
                | "ACCOUNT_HOLDER_MIGRATED"
                | "ACCOUNT_HOLDER_PAYOUT"
                | "ACCOUNT_HOLDER_STATUS_CHANGE"
                | "ACCOUNT_HOLDER_STORE_STATUS_CHANGE"
                | "ACCOUNT_HOLDER_UPCOMING_DEADLINE"
                | "ACCOUNT_HOLDER_UPDATED"
                | "ACCOUNT_HOLDER_VERIFICATION"
                | "ACCOUNT_UPDATED"
                | "BENEFICIARY_SETUP"
                | "COMPENSATE_NEGATIVE_BALANCE"
                | "DIRECT_DEBIT_INITIATED"
                | "FUNDS_MIGRATED"
                | "PAYMENT_FAILURE"
                | "PENDING_CREDIT"
                | "REFUND_FUNDS_TRANSFER"
                | "REPORT_AVAILABLE"
                | "SCHEDULED_REFUNDS"
                | "SCORE_SIGNAL_TRIGGERED"
                | "TRANSFER_FUNDS"
                | "TRANSFER_NOT_PAIDOUT_TRANSFERS"
              )[];
              /**
               * The notification message and related response messages.
               */
              exchangeMessages?: {
                messageCode?: string;
                messageDescription?: string;
                [k: string]: unknown;
              }[];
              /**
               * Contains field validation errors that would prevent requests from being processed.
               */
              invalidFields?: {
                /**
                 * The validation error code.
                 */
                errorCode?: number;
                /**
                 * A description of the validation error.
                 */
                errorDescription?: string;
                fieldType?: {
                  /**
                   * The full name of the property.
                   */
                  field?: string;
                  /**
                   * The type of the field.
                   */
                  fieldName?:
                    | "accountCode"
                    | "accountHolderCode"
                    | "accountHolderDetails"
                    | "accountNumber"
                    | "accountStateType"
                    | "accountStatus"
                    | "accountType"
                    | "address"
                    | "balanceAccount"
                    | "balanceAccountActive"
                    | "balanceAccountCode"
                    | "balanceAccountId"
                    | "bankAccount"
                    | "bankAccountCode"
                    | "bankAccountName"
                    | "bankAccountUUID"
                    | "bankBicSwift"
                    | "bankCity"
                    | "bankCode"
                    | "bankName"
                    | "bankStatement"
                    | "branchCode"
                    | "businessContact"
                    | "cardToken"
                    | "checkCode"
                    | "city"
                    | "companyRegistration"
                    | "constitutionalDocument"
                    | "controller"
                    | "country"
                    | "countryCode"
                    | "currency"
                    | "currencyCode"
                    | "dateOfBirth"
                    | "description"
                    | "destinationAccountCode"
                    | "document"
                    | "documentContent"
                    | "documentExpirationDate"
                    | "documentIssuerCountry"
                    | "documentIssuerState"
                    | "documentName"
                    | "documentNumber"
                    | "documentType"
                    | "doingBusinessAs"
                    | "drivingLicence"
                    | "drivingLicenceBack"
                    | "drivingLicenceFront"
                    | "drivingLicense"
                    | "email"
                    | "firstName"
                    | "formType"
                    | "fullPhoneNumber"
                    | "gender"
                    | "hopWebserviceUser"
                    | "houseNumberOrName"
                    | "iban"
                    | "idCard"
                    | "idCardBack"
                    | "idCardFront"
                    | "idNumber"
                    | "identityDocument"
                    | "individualDetails"
                    | "infix"
                    | "jobTitle"
                    | "lastName"
                    | "lastReviewDate"
                    | "legalArrangement"
                    | "legalArrangementCode"
                    | "legalArrangementEntity"
                    | "legalArrangementEntityCode"
                    | "legalArrangementLegalForm"
                    | "legalArrangementMember"
                    | "legalArrangementMembers"
                    | "legalArrangementName"
                    | "legalArrangementReference"
                    | "legalArrangementRegistrationNumber"
                    | "legalArrangementTaxNumber"
                    | "legalArrangementType"
                    | "legalBusinessName"
                    | "legalEntity"
                    | "legalEntityType"
                    | "logo"
                    | "merchantAccount"
                    | "merchantCategoryCode"
                    | "merchantHouseNumber"
                    | "merchantReference"
                    | "microDeposit"
                    | "name"
                    | "nationality"
                    | "originalReference"
                    | "ownerCity"
                    | "ownerCountryCode"
                    | "ownerDateOfBirth"
                    | "ownerHouseNumberOrName"
                    | "ownerName"
                    | "ownerPostalCode"
                    | "ownerState"
                    | "ownerStreet"
                    | "passport"
                    | "passportNumber"
                    | "payoutMethodCode"
                    | "payoutSchedule"
                    | "pciSelfAssessment"
                    | "personalData"
                    | "phoneCountryCode"
                    | "phoneNumber"
                    | "postalCode"
                    | "primaryCurrency"
                    | "reason"
                    | "registrationNumber"
                    | "returnUrl"
                    | "schedule"
                    | "shareholder"
                    | "shareholderCode"
                    | "shareholderCodeAndSignatoryCode"
                    | "shareholderCodeOrSignatoryCode"
                    | "shareholderType"
                    | "shareholderTypes"
                    | "shopperInteraction"
                    | "signatory"
                    | "signatoryCode"
                    | "socialSecurityNumber"
                    | "sourceAccountCode"
                    | "splitAccount"
                    | "splitConfigurationUUID"
                    | "splitCurrency"
                    | "splitValue"
                    | "splits"
                    | "stateOrProvince"
                    | "status"
                    | "stockExchange"
                    | "stockNumber"
                    | "stockTicker"
                    | "store"
                    | "storeDetail"
                    | "storeName"
                    | "storeReference"
                    | "street"
                    | "taxId"
                    | "tier"
                    | "tierNumber"
                    | "transferCode"
                    | "ultimateParentCompany"
                    | "ultimateParentCompanyAddressDetails"
                    | "ultimateParentCompanyAddressDetailsCountry"
                    | "ultimateParentCompanyBusinessDetails"
                    | "ultimateParentCompanyBusinessDetailsLegalBusinessName"
                    | "ultimateParentCompanyBusinessDetailsRegistrationNumber"
                    | "ultimateParentCompanyCode"
                    | "ultimateParentCompanyStockExchange"
                    | "ultimateParentCompanyStockNumber"
                    | "ultimateParentCompanyStockNumberOrStockTicker"
                    | "ultimateParentCompanyStockTicker"
                    | "unknown"
                    | "value"
                    | "verificationType"
                    | "virtualAccount"
                    | "visaNumber"
                    | "webAddress"
                    | "year";
                  /**
                   * The code of the shareholder that the field belongs to. If empty, the field belongs to an account holder.
                   */
                  shareholderCode?: string;
                  [k: string]: unknown;
                };
                [k: string]: unknown;
              }[];
              /**
               * The ID of the notification subscription configuration.
               */
              notificationId: number;
              /**
               * A list of messages describing the testing steps.
               */
              okMessages?: string[];
              /**
               * The reference of a request. Can be used to uniquely identify the request.
               */
              pspReference?: string;
              /**
               * The result code.
               */
              resultCode?: string;
              [k: string]: unknown;
            };
          }
        | {
            status: "400";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "401";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "403";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "422";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "500";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          };
    };
  };
  "/updateNotificationConfiguration": {
    post: {
      request: {
        path?: {};
        headers?: {
          "Content-Type"?: "application/json";
          [k: string]: unknown;
        };
        cookies?: {
          [k: string]: unknown;
        };
        query?: {
          [k: string]: unknown;
        };
        body?: {
          configurationDetails: {
            /**
             * Indicates whether the notification subscription is active.
             */
            active?: boolean;
            /**
             * The version of the notification to which you are subscribing. To make sure that your integration can properly process the notification, subscribe to the same version as the API that you're using.
             */
            apiVersion?: number;
            /**
             * A description of the notification subscription configuration.
             */
            description?: string;
            /**
             * Contains objects that define event types and their subscription settings.
             */
            eventConfigs?: {
              /**
               * The type of event.
               *
               * Possible values: **ACCOUNT_CLOSED**, **ACCOUNT_CREATED**, **ACCOUNT_FUNDS_BELOW_THRESHOLD**, **ACCOUNT_HOLDER_CREATED**, **ACCOUNT_HOLDER_LIMIT_REACHED**, **ACCOUNT_HOLDER_PAYOUT**, **ACCOUNT_HOLDER_STATUS_CHANGE**, **ACCOUNT_HOLDER_STORE_STATUS_CHANGE**, **ACCOUNT_HOLDER_UPCOMING_DEADLINE**, **ACCOUNT_HOLDER_UPDATED**, **ACCOUNT_HOLDER_VERIFICATION**, **ACCOUNT_UPDATED**, **BENEFICIARY_SETUP**, **COMPENSATE_NEGATIVE_BALANCE**, **DIRECT_DEBIT_INITIATED**, **PAYMENT_FAILURE**, **REFUND_FUNDS_TRANSFER**, **REPORT_AVAILABLE**, **SCHEDULED_REFUNDS**, **TRANSFER_FUNDS**.
               */
              eventType:
                | "ACCOUNT_CLOSED"
                | "ACCOUNT_CREATED"
                | "ACCOUNT_FUNDS_BELOW_THRESHOLD"
                | "ACCOUNT_HOLDER_CREATED"
                | "ACCOUNT_HOLDER_LIMIT_REACHED"
                | "ACCOUNT_HOLDER_MIGRATED"
                | "ACCOUNT_HOLDER_PAYOUT"
                | "ACCOUNT_HOLDER_STATUS_CHANGE"
                | "ACCOUNT_HOLDER_STORE_STATUS_CHANGE"
                | "ACCOUNT_HOLDER_UPCOMING_DEADLINE"
                | "ACCOUNT_HOLDER_UPDATED"
                | "ACCOUNT_HOLDER_VERIFICATION"
                | "ACCOUNT_UPDATED"
                | "BENEFICIARY_SETUP"
                | "COMPENSATE_NEGATIVE_BALANCE"
                | "DIRECT_DEBIT_INITIATED"
                | "FUNDS_MIGRATED"
                | "PAYMENT_FAILURE"
                | "PENDING_CREDIT"
                | "REFUND_FUNDS_TRANSFER"
                | "REPORT_AVAILABLE"
                | "SCHEDULED_REFUNDS"
                | "SCORE_SIGNAL_TRIGGERED"
                | "TRANSFER_FUNDS"
                | "TRANSFER_NOT_PAIDOUT_TRANSFERS";
              /**
               * Indicates whether the specified `eventType` is sent to your webhook endpoint.
               * Possible values:
               * * **INCLUDE**: Send the specified `eventType`.
               * * **EXCLUDE**: Send all event types except the specified `eventType` and other event types with the `includeMode` set to **EXCLUDE**.
               */
              includeMode: "EXCLUDE" | "INCLUDE";
              [k: string]: unknown;
            }[];
            /**
             * A string with which to salt the notification(s) before hashing. If this field is provided, a hash value will be included under the notification header `HmacSignature` and the hash protocol will be included under the notification header `Protocol`. A notification body along with its `hmacSignatureKey` and `Protocol` can be used to calculate a hash value; matching this hash value with the `HmacSignature` will ensure that the notification body has not been tampered with or corrupted.
             *
             * >Must be a 32-byte hex-encoded string (i.e. a string containing 64 hexadecimal characters; e.g. "b0ea55c2fe60d4d1d605e9c385e0e7f7e6cafbb939ce07010f31a327a0871f27").
             *
             * The omission of this field will preclude the provision of the `HmacSignature` and `Protocol` headers in notification(s).
             */
            hmacSignatureKey?: string;
            /**
             * Adyen-generated ID for the entry, returned in the response when you create a notification configuration. Required when updating an existing configuration using [`/updateNotificationConfiguration`](https://docs.adyen.com/api-explorer/#/NotificationConfigurationService/latest/post/updateNotificationConfiguration).
             */
            notificationId?: number;
            /**
             * The password to use when accessing the notifyURL with the specified username.
             */
            notifyPassword?: string;
            /**
             * The URL to which the notifications are to be sent.
             */
            notifyURL?: string;
            /**
             * The username to use when accessing the notifyURL.
             */
            notifyUsername?: string;
            /**
             * The SSL protocol employed by the endpoint.
             * >Permitted values: `TLSv12`, `TLSv13`.
             */
            sslProtocol?: "TLSv12" | "TLSv13";
            [k: string]: unknown;
          };
          [k: string]: unknown;
        };
      };
      responses:
        | {
            status: "200";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              configurationDetails: {
                /**
                 * Indicates whether the notification subscription is active.
                 */
                active?: boolean;
                /**
                 * The version of the notification to which you are subscribing. To make sure that your integration can properly process the notification, subscribe to the same version as the API that you're using.
                 */
                apiVersion?: number;
                /**
                 * A description of the notification subscription configuration.
                 */
                description?: string;
                /**
                 * Contains objects that define event types and their subscription settings.
                 */
                eventConfigs?: {
                  /**
                   * The type of event.
                   *
                   * Possible values: **ACCOUNT_CLOSED**, **ACCOUNT_CREATED**, **ACCOUNT_FUNDS_BELOW_THRESHOLD**, **ACCOUNT_HOLDER_CREATED**, **ACCOUNT_HOLDER_LIMIT_REACHED**, **ACCOUNT_HOLDER_PAYOUT**, **ACCOUNT_HOLDER_STATUS_CHANGE**, **ACCOUNT_HOLDER_STORE_STATUS_CHANGE**, **ACCOUNT_HOLDER_UPCOMING_DEADLINE**, **ACCOUNT_HOLDER_UPDATED**, **ACCOUNT_HOLDER_VERIFICATION**, **ACCOUNT_UPDATED**, **BENEFICIARY_SETUP**, **COMPENSATE_NEGATIVE_BALANCE**, **DIRECT_DEBIT_INITIATED**, **PAYMENT_FAILURE**, **REFUND_FUNDS_TRANSFER**, **REPORT_AVAILABLE**, **SCHEDULED_REFUNDS**, **TRANSFER_FUNDS**.
                   */
                  eventType:
                    | "ACCOUNT_CLOSED"
                    | "ACCOUNT_CREATED"
                    | "ACCOUNT_FUNDS_BELOW_THRESHOLD"
                    | "ACCOUNT_HOLDER_CREATED"
                    | "ACCOUNT_HOLDER_LIMIT_REACHED"
                    | "ACCOUNT_HOLDER_MIGRATED"
                    | "ACCOUNT_HOLDER_PAYOUT"
                    | "ACCOUNT_HOLDER_STATUS_CHANGE"
                    | "ACCOUNT_HOLDER_STORE_STATUS_CHANGE"
                    | "ACCOUNT_HOLDER_UPCOMING_DEADLINE"
                    | "ACCOUNT_HOLDER_UPDATED"
                    | "ACCOUNT_HOLDER_VERIFICATION"
                    | "ACCOUNT_UPDATED"
                    | "BENEFICIARY_SETUP"
                    | "COMPENSATE_NEGATIVE_BALANCE"
                    | "DIRECT_DEBIT_INITIATED"
                    | "FUNDS_MIGRATED"
                    | "PAYMENT_FAILURE"
                    | "PENDING_CREDIT"
                    | "REFUND_FUNDS_TRANSFER"
                    | "REPORT_AVAILABLE"
                    | "SCHEDULED_REFUNDS"
                    | "SCORE_SIGNAL_TRIGGERED"
                    | "TRANSFER_FUNDS"
                    | "TRANSFER_NOT_PAIDOUT_TRANSFERS";
                  /**
                   * Indicates whether the specified `eventType` is sent to your webhook endpoint.
                   * Possible values:
                   * * **INCLUDE**: Send the specified `eventType`.
                   * * **EXCLUDE**: Send all event types except the specified `eventType` and other event types with the `includeMode` set to **EXCLUDE**.
                   */
                  includeMode: "EXCLUDE" | "INCLUDE";
                  [k: string]: unknown;
                }[];
                /**
                 * A string with which to salt the notification(s) before hashing. If this field is provided, a hash value will be included under the notification header `HmacSignature` and the hash protocol will be included under the notification header `Protocol`. A notification body along with its `hmacSignatureKey` and `Protocol` can be used to calculate a hash value; matching this hash value with the `HmacSignature` will ensure that the notification body has not been tampered with or corrupted.
                 *
                 * >Must be a 32-byte hex-encoded string (i.e. a string containing 64 hexadecimal characters; e.g. "b0ea55c2fe60d4d1d605e9c385e0e7f7e6cafbb939ce07010f31a327a0871f27").
                 *
                 * The omission of this field will preclude the provision of the `HmacSignature` and `Protocol` headers in notification(s).
                 */
                hmacSignatureKey?: string;
                /**
                 * Adyen-generated ID for the entry, returned in the response when you create a notification configuration. Required when updating an existing configuration using [`/updateNotificationConfiguration`](https://docs.adyen.com/api-explorer/#/NotificationConfigurationService/latest/post/updateNotificationConfiguration).
                 */
                notificationId?: number;
                /**
                 * The password to use when accessing the notifyURL with the specified username.
                 */
                notifyPassword?: string;
                /**
                 * The URL to which the notifications are to be sent.
                 */
                notifyURL?: string;
                /**
                 * The username to use when accessing the notifyURL.
                 */
                notifyUsername?: string;
                /**
                 * The SSL protocol employed by the endpoint.
                 * >Permitted values: `TLSv12`, `TLSv13`.
                 */
                sslProtocol?: "TLSv12" | "TLSv13";
                [k: string]: unknown;
              };
              /**
               * Contains field validation errors that would prevent requests from being processed.
               */
              invalidFields?: {
                /**
                 * The validation error code.
                 */
                errorCode?: number;
                /**
                 * A description of the validation error.
                 */
                errorDescription?: string;
                fieldType?: {
                  /**
                   * The full name of the property.
                   */
                  field?: string;
                  /**
                   * The type of the field.
                   */
                  fieldName?:
                    | "accountCode"
                    | "accountHolderCode"
                    | "accountHolderDetails"
                    | "accountNumber"
                    | "accountStateType"
                    | "accountStatus"
                    | "accountType"
                    | "address"
                    | "balanceAccount"
                    | "balanceAccountActive"
                    | "balanceAccountCode"
                    | "balanceAccountId"
                    | "bankAccount"
                    | "bankAccountCode"
                    | "bankAccountName"
                    | "bankAccountUUID"
                    | "bankBicSwift"
                    | "bankCity"
                    | "bankCode"
                    | "bankName"
                    | "bankStatement"
                    | "branchCode"
                    | "businessContact"
                    | "cardToken"
                    | "checkCode"
                    | "city"
                    | "companyRegistration"
                    | "constitutionalDocument"
                    | "controller"
                    | "country"
                    | "countryCode"
                    | "currency"
                    | "currencyCode"
                    | "dateOfBirth"
                    | "description"
                    | "destinationAccountCode"
                    | "document"
                    | "documentContent"
                    | "documentExpirationDate"
                    | "documentIssuerCountry"
                    | "documentIssuerState"
                    | "documentName"
                    | "documentNumber"
                    | "documentType"
                    | "doingBusinessAs"
                    | "drivingLicence"
                    | "drivingLicenceBack"
                    | "drivingLicenceFront"
                    | "drivingLicense"
                    | "email"
                    | "firstName"
                    | "formType"
                    | "fullPhoneNumber"
                    | "gender"
                    | "hopWebserviceUser"
                    | "houseNumberOrName"
                    | "iban"
                    | "idCard"
                    | "idCardBack"
                    | "idCardFront"
                    | "idNumber"
                    | "identityDocument"
                    | "individualDetails"
                    | "infix"
                    | "jobTitle"
                    | "lastName"
                    | "lastReviewDate"
                    | "legalArrangement"
                    | "legalArrangementCode"
                    | "legalArrangementEntity"
                    | "legalArrangementEntityCode"
                    | "legalArrangementLegalForm"
                    | "legalArrangementMember"
                    | "legalArrangementMembers"
                    | "legalArrangementName"
                    | "legalArrangementReference"
                    | "legalArrangementRegistrationNumber"
                    | "legalArrangementTaxNumber"
                    | "legalArrangementType"
                    | "legalBusinessName"
                    | "legalEntity"
                    | "legalEntityType"
                    | "logo"
                    | "merchantAccount"
                    | "merchantCategoryCode"
                    | "merchantHouseNumber"
                    | "merchantReference"
                    | "microDeposit"
                    | "name"
                    | "nationality"
                    | "originalReference"
                    | "ownerCity"
                    | "ownerCountryCode"
                    | "ownerDateOfBirth"
                    | "ownerHouseNumberOrName"
                    | "ownerName"
                    | "ownerPostalCode"
                    | "ownerState"
                    | "ownerStreet"
                    | "passport"
                    | "passportNumber"
                    | "payoutMethodCode"
                    | "payoutSchedule"
                    | "pciSelfAssessment"
                    | "personalData"
                    | "phoneCountryCode"
                    | "phoneNumber"
                    | "postalCode"
                    | "primaryCurrency"
                    | "reason"
                    | "registrationNumber"
                    | "returnUrl"
                    | "schedule"
                    | "shareholder"
                    | "shareholderCode"
                    | "shareholderCodeAndSignatoryCode"
                    | "shareholderCodeOrSignatoryCode"
                    | "shareholderType"
                    | "shareholderTypes"
                    | "shopperInteraction"
                    | "signatory"
                    | "signatoryCode"
                    | "socialSecurityNumber"
                    | "sourceAccountCode"
                    | "splitAccount"
                    | "splitConfigurationUUID"
                    | "splitCurrency"
                    | "splitValue"
                    | "splits"
                    | "stateOrProvince"
                    | "status"
                    | "stockExchange"
                    | "stockNumber"
                    | "stockTicker"
                    | "store"
                    | "storeDetail"
                    | "storeName"
                    | "storeReference"
                    | "street"
                    | "taxId"
                    | "tier"
                    | "tierNumber"
                    | "transferCode"
                    | "ultimateParentCompany"
                    | "ultimateParentCompanyAddressDetails"
                    | "ultimateParentCompanyAddressDetailsCountry"
                    | "ultimateParentCompanyBusinessDetails"
                    | "ultimateParentCompanyBusinessDetailsLegalBusinessName"
                    | "ultimateParentCompanyBusinessDetailsRegistrationNumber"
                    | "ultimateParentCompanyCode"
                    | "ultimateParentCompanyStockExchange"
                    | "ultimateParentCompanyStockNumber"
                    | "ultimateParentCompanyStockNumberOrStockTicker"
                    | "ultimateParentCompanyStockTicker"
                    | "unknown"
                    | "value"
                    | "verificationType"
                    | "virtualAccount"
                    | "visaNumber"
                    | "webAddress"
                    | "year";
                  /**
                   * The code of the shareholder that the field belongs to. If empty, the field belongs to an account holder.
                   */
                  shareholderCode?: string;
                  [k: string]: unknown;
                };
                [k: string]: unknown;
              }[];
              /**
               * The reference of a request. Can be used to uniquely identify the request.
               */
              pspReference?: string;
              /**
               * The result code.
               */
              resultCode?: string;
              [k: string]: unknown;
            };
          }
        | {
            status: "400";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "401";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "403";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "422";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          }
        | {
            status: "500";
            headers: {
              "Content-Type": "application/json";
              [k: string]: unknown;
            };
            body: {
              /**
               * The error code mapped to the error message.
               */
              errorCode?: string;
              /**
               * The category of the error.
               */
              errorType?: string;
              /**
               * A short explanation of the issue.
               */
              message?: string;
              /**
               * The PSP reference of the payment.
               */
              pspReference?: string;
              /**
               * The HTTP response status.
               */
              status?: number;
              [k: string]: unknown;
            };
          };
    };
  };
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface Webhooks {}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface Components {
  schemas: {
    CreateNotificationConfigurationRequest: {
      configurationDetails: {
        /**
         * Indicates whether the notification subscription is active.
         */
        active?: boolean;
        /**
         * The version of the notification to which you are subscribing. To make sure that your integration can properly process the notification, subscribe to the same version as the API that you're using.
         */
        apiVersion?: number;
        /**
         * A description of the notification subscription configuration.
         */
        description?: string;
        /**
         * Contains objects that define event types and their subscription settings.
         */
        eventConfigs?: {
          /**
           * The type of event.
           *
           * Possible values: **ACCOUNT_CLOSED**, **ACCOUNT_CREATED**, **ACCOUNT_FUNDS_BELOW_THRESHOLD**, **ACCOUNT_HOLDER_CREATED**, **ACCOUNT_HOLDER_LIMIT_REACHED**, **ACCOUNT_HOLDER_PAYOUT**, **ACCOUNT_HOLDER_STATUS_CHANGE**, **ACCOUNT_HOLDER_STORE_STATUS_CHANGE**, **ACCOUNT_HOLDER_UPCOMING_DEADLINE**, **ACCOUNT_HOLDER_UPDATED**, **ACCOUNT_HOLDER_VERIFICATION**, **ACCOUNT_UPDATED**, **BENEFICIARY_SETUP**, **COMPENSATE_NEGATIVE_BALANCE**, **DIRECT_DEBIT_INITIATED**, **PAYMENT_FAILURE**, **REFUND_FUNDS_TRANSFER**, **REPORT_AVAILABLE**, **SCHEDULED_REFUNDS**, **TRANSFER_FUNDS**.
           */
          eventType:
            | "ACCOUNT_CLOSED"
            | "ACCOUNT_CREATED"
            | "ACCOUNT_FUNDS_BELOW_THRESHOLD"
            | "ACCOUNT_HOLDER_CREATED"
            | "ACCOUNT_HOLDER_LIMIT_REACHED"
            | "ACCOUNT_HOLDER_MIGRATED"
            | "ACCOUNT_HOLDER_PAYOUT"
            | "ACCOUNT_HOLDER_STATUS_CHANGE"
            | "ACCOUNT_HOLDER_STORE_STATUS_CHANGE"
            | "ACCOUNT_HOLDER_UPCOMING_DEADLINE"
            | "ACCOUNT_HOLDER_UPDATED"
            | "ACCOUNT_HOLDER_VERIFICATION"
            | "ACCOUNT_UPDATED"
            | "BENEFICIARY_SETUP"
            | "COMPENSATE_NEGATIVE_BALANCE"
            | "DIRECT_DEBIT_INITIATED"
            | "FUNDS_MIGRATED"
            | "PAYMENT_FAILURE"
            | "PENDING_CREDIT"
            | "REFUND_FUNDS_TRANSFER"
            | "REPORT_AVAILABLE"
            | "SCHEDULED_REFUNDS"
            | "SCORE_SIGNAL_TRIGGERED"
            | "TRANSFER_FUNDS"
            | "TRANSFER_NOT_PAIDOUT_TRANSFERS";
          /**
           * Indicates whether the specified `eventType` is sent to your webhook endpoint.
           * Possible values:
           * * **INCLUDE**: Send the specified `eventType`.
           * * **EXCLUDE**: Send all event types except the specified `eventType` and other event types with the `includeMode` set to **EXCLUDE**.
           */
          includeMode: "EXCLUDE" | "INCLUDE";
          [k: string]: unknown;
        }[];
        /**
         * A string with which to salt the notification(s) before hashing. If this field is provided, a hash value will be included under the notification header `HmacSignature` and the hash protocol will be included under the notification header `Protocol`. A notification body along with its `hmacSignatureKey` and `Protocol` can be used to calculate a hash value; matching this hash value with the `HmacSignature` will ensure that the notification body has not been tampered with or corrupted.
         *
         * >Must be a 32-byte hex-encoded string (i.e. a string containing 64 hexadecimal characters; e.g. "b0ea55c2fe60d4d1d605e9c385e0e7f7e6cafbb939ce07010f31a327a0871f27").
         *
         * The omission of this field will preclude the provision of the `HmacSignature` and `Protocol` headers in notification(s).
         */
        hmacSignatureKey?: string;
        /**
         * Adyen-generated ID for the entry, returned in the response when you create a notification configuration. Required when updating an existing configuration using [`/updateNotificationConfiguration`](https://docs.adyen.com/api-explorer/#/NotificationConfigurationService/latest/post/updateNotificationConfiguration).
         */
        notificationId?: number;
        /**
         * The password to use when accessing the notifyURL with the specified username.
         */
        notifyPassword?: string;
        /**
         * The URL to which the notifications are to be sent.
         */
        notifyURL?: string;
        /**
         * The username to use when accessing the notifyURL.
         */
        notifyUsername?: string;
        /**
         * The SSL protocol employed by the endpoint.
         * >Permitted values: `TLSv12`, `TLSv13`.
         */
        sslProtocol?: "TLSv12" | "TLSv13";
        [k: string]: unknown;
      };
      [k: string]: unknown;
    };
    DeleteNotificationConfigurationRequest: {
      /**
       * A list of IDs of the notification subscription configurations to be deleted.
       */
      notificationIds: number[];
      [k: string]: unknown;
    };
    EmptyRequest: {
      [k: string]: unknown;
    };
    ErrorFieldType: {
      /**
       * The validation error code.
       */
      errorCode?: number;
      /**
       * A description of the validation error.
       */
      errorDescription?: string;
      fieldType?: {
        /**
         * The full name of the property.
         */
        field?: string;
        /**
         * The type of the field.
         */
        fieldName?:
          | "accountCode"
          | "accountHolderCode"
          | "accountHolderDetails"
          | "accountNumber"
          | "accountStateType"
          | "accountStatus"
          | "accountType"
          | "address"
          | "balanceAccount"
          | "balanceAccountActive"
          | "balanceAccountCode"
          | "balanceAccountId"
          | "bankAccount"
          | "bankAccountCode"
          | "bankAccountName"
          | "bankAccountUUID"
          | "bankBicSwift"
          | "bankCity"
          | "bankCode"
          | "bankName"
          | "bankStatement"
          | "branchCode"
          | "businessContact"
          | "cardToken"
          | "checkCode"
          | "city"
          | "companyRegistration"
          | "constitutionalDocument"
          | "controller"
          | "country"
          | "countryCode"
          | "currency"
          | "currencyCode"
          | "dateOfBirth"
          | "description"
          | "destinationAccountCode"
          | "document"
          | "documentContent"
          | "documentExpirationDate"
          | "documentIssuerCountry"
          | "documentIssuerState"
          | "documentName"
          | "documentNumber"
          | "documentType"
          | "doingBusinessAs"
          | "drivingLicence"
          | "drivingLicenceBack"
          | "drivingLicenceFront"
          | "drivingLicense"
          | "email"
          | "firstName"
          | "formType"
          | "fullPhoneNumber"
          | "gender"
          | "hopWebserviceUser"
          | "houseNumberOrName"
          | "iban"
          | "idCard"
          | "idCardBack"
          | "idCardFront"
          | "idNumber"
          | "identityDocument"
          | "individualDetails"
          | "infix"
          | "jobTitle"
          | "lastName"
          | "lastReviewDate"
          | "legalArrangement"
          | "legalArrangementCode"
          | "legalArrangementEntity"
          | "legalArrangementEntityCode"
          | "legalArrangementLegalForm"
          | "legalArrangementMember"
          | "legalArrangementMembers"
          | "legalArrangementName"
          | "legalArrangementReference"
          | "legalArrangementRegistrationNumber"
          | "legalArrangementTaxNumber"
          | "legalArrangementType"
          | "legalBusinessName"
          | "legalEntity"
          | "legalEntityType"
          | "logo"
          | "merchantAccount"
          | "merchantCategoryCode"
          | "merchantHouseNumber"
          | "merchantReference"
          | "microDeposit"
          | "name"
          | "nationality"
          | "originalReference"
          | "ownerCity"
          | "ownerCountryCode"
          | "ownerDateOfBirth"
          | "ownerHouseNumberOrName"
          | "ownerName"
          | "ownerPostalCode"
          | "ownerState"
          | "ownerStreet"
          | "passport"
          | "passportNumber"
          | "payoutMethodCode"
          | "payoutSchedule"
          | "pciSelfAssessment"
          | "personalData"
          | "phoneCountryCode"
          | "phoneNumber"
          | "postalCode"
          | "primaryCurrency"
          | "reason"
          | "registrationNumber"
          | "returnUrl"
          | "schedule"
          | "shareholder"
          | "shareholderCode"
          | "shareholderCodeAndSignatoryCode"
          | "shareholderCodeOrSignatoryCode"
          | "shareholderType"
          | "shareholderTypes"
          | "shopperInteraction"
          | "signatory"
          | "signatoryCode"
          | "socialSecurityNumber"
          | "sourceAccountCode"
          | "splitAccount"
          | "splitConfigurationUUID"
          | "splitCurrency"
          | "splitValue"
          | "splits"
          | "stateOrProvince"
          | "status"
          | "stockExchange"
          | "stockNumber"
          | "stockTicker"
          | "store"
          | "storeDetail"
          | "storeName"
          | "storeReference"
          | "street"
          | "taxId"
          | "tier"
          | "tierNumber"
          | "transferCode"
          | "ultimateParentCompany"
          | "ultimateParentCompanyAddressDetails"
          | "ultimateParentCompanyAddressDetailsCountry"
          | "ultimateParentCompanyBusinessDetails"
          | "ultimateParentCompanyBusinessDetailsLegalBusinessName"
          | "ultimateParentCompanyBusinessDetailsRegistrationNumber"
          | "ultimateParentCompanyCode"
          | "ultimateParentCompanyStockExchange"
          | "ultimateParentCompanyStockNumber"
          | "ultimateParentCompanyStockNumberOrStockTicker"
          | "ultimateParentCompanyStockTicker"
          | "unknown"
          | "value"
          | "verificationType"
          | "virtualAccount"
          | "visaNumber"
          | "webAddress"
          | "year";
        /**
         * The code of the shareholder that the field belongs to. If empty, the field belongs to an account holder.
         */
        shareholderCode?: string;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    };
    ExchangeMessage: {
      messageCode?: string;
      messageDescription?: string;
      [k: string]: unknown;
    };
    FieldType: {
      /**
       * The full name of the property.
       */
      field?: string;
      /**
       * The type of the field.
       */
      fieldName?:
        | "accountCode"
        | "accountHolderCode"
        | "accountHolderDetails"
        | "accountNumber"
        | "accountStateType"
        | "accountStatus"
        | "accountType"
        | "address"
        | "balanceAccount"
        | "balanceAccountActive"
        | "balanceAccountCode"
        | "balanceAccountId"
        | "bankAccount"
        | "bankAccountCode"
        | "bankAccountName"
        | "bankAccountUUID"
        | "bankBicSwift"
        | "bankCity"
        | "bankCode"
        | "bankName"
        | "bankStatement"
        | "branchCode"
        | "businessContact"
        | "cardToken"
        | "checkCode"
        | "city"
        | "companyRegistration"
        | "constitutionalDocument"
        | "controller"
        | "country"
        | "countryCode"
        | "currency"
        | "currencyCode"
        | "dateOfBirth"
        | "description"
        | "destinationAccountCode"
        | "document"
        | "documentContent"
        | "documentExpirationDate"
        | "documentIssuerCountry"
        | "documentIssuerState"
        | "documentName"
        | "documentNumber"
        | "documentType"
        | "doingBusinessAs"
        | "drivingLicence"
        | "drivingLicenceBack"
        | "drivingLicenceFront"
        | "drivingLicense"
        | "email"
        | "firstName"
        | "formType"
        | "fullPhoneNumber"
        | "gender"
        | "hopWebserviceUser"
        | "houseNumberOrName"
        | "iban"
        | "idCard"
        | "idCardBack"
        | "idCardFront"
        | "idNumber"
        | "identityDocument"
        | "individualDetails"
        | "infix"
        | "jobTitle"
        | "lastName"
        | "lastReviewDate"
        | "legalArrangement"
        | "legalArrangementCode"
        | "legalArrangementEntity"
        | "legalArrangementEntityCode"
        | "legalArrangementLegalForm"
        | "legalArrangementMember"
        | "legalArrangementMembers"
        | "legalArrangementName"
        | "legalArrangementReference"
        | "legalArrangementRegistrationNumber"
        | "legalArrangementTaxNumber"
        | "legalArrangementType"
        | "legalBusinessName"
        | "legalEntity"
        | "legalEntityType"
        | "logo"
        | "merchantAccount"
        | "merchantCategoryCode"
        | "merchantHouseNumber"
        | "merchantReference"
        | "microDeposit"
        | "name"
        | "nationality"
        | "originalReference"
        | "ownerCity"
        | "ownerCountryCode"
        | "ownerDateOfBirth"
        | "ownerHouseNumberOrName"
        | "ownerName"
        | "ownerPostalCode"
        | "ownerState"
        | "ownerStreet"
        | "passport"
        | "passportNumber"
        | "payoutMethodCode"
        | "payoutSchedule"
        | "pciSelfAssessment"
        | "personalData"
        | "phoneCountryCode"
        | "phoneNumber"
        | "postalCode"
        | "primaryCurrency"
        | "reason"
        | "registrationNumber"
        | "returnUrl"
        | "schedule"
        | "shareholder"
        | "shareholderCode"
        | "shareholderCodeAndSignatoryCode"
        | "shareholderCodeOrSignatoryCode"
        | "shareholderType"
        | "shareholderTypes"
        | "shopperInteraction"
        | "signatory"
        | "signatoryCode"
        | "socialSecurityNumber"
        | "sourceAccountCode"
        | "splitAccount"
        | "splitConfigurationUUID"
        | "splitCurrency"
        | "splitValue"
        | "splits"
        | "stateOrProvince"
        | "status"
        | "stockExchange"
        | "stockNumber"
        | "stockTicker"
        | "store"
        | "storeDetail"
        | "storeName"
        | "storeReference"
        | "street"
        | "taxId"
        | "tier"
        | "tierNumber"
        | "transferCode"
        | "ultimateParentCompany"
        | "ultimateParentCompanyAddressDetails"
        | "ultimateParentCompanyAddressDetailsCountry"
        | "ultimateParentCompanyBusinessDetails"
        | "ultimateParentCompanyBusinessDetailsLegalBusinessName"
        | "ultimateParentCompanyBusinessDetailsRegistrationNumber"
        | "ultimateParentCompanyCode"
        | "ultimateParentCompanyStockExchange"
        | "ultimateParentCompanyStockNumber"
        | "ultimateParentCompanyStockNumberOrStockTicker"
        | "ultimateParentCompanyStockTicker"
        | "unknown"
        | "value"
        | "verificationType"
        | "virtualAccount"
        | "visaNumber"
        | "webAddress"
        | "year";
      /**
       * The code of the shareholder that the field belongs to. If empty, the field belongs to an account holder.
       */
      shareholderCode?: string;
      [k: string]: unknown;
    };
    GenericResponse: {
      /**
       * Contains field validation errors that would prevent requests from being processed.
       */
      invalidFields?: {
        /**
         * The validation error code.
         */
        errorCode?: number;
        /**
         * A description of the validation error.
         */
        errorDescription?: string;
        fieldType?: {
          /**
           * The full name of the property.
           */
          field?: string;
          /**
           * The type of the field.
           */
          fieldName?:
            | "accountCode"
            | "accountHolderCode"
            | "accountHolderDetails"
            | "accountNumber"
            | "accountStateType"
            | "accountStatus"
            | "accountType"
            | "address"
            | "balanceAccount"
            | "balanceAccountActive"
            | "balanceAccountCode"
            | "balanceAccountId"
            | "bankAccount"
            | "bankAccountCode"
            | "bankAccountName"
            | "bankAccountUUID"
            | "bankBicSwift"
            | "bankCity"
            | "bankCode"
            | "bankName"
            | "bankStatement"
            | "branchCode"
            | "businessContact"
            | "cardToken"
            | "checkCode"
            | "city"
            | "companyRegistration"
            | "constitutionalDocument"
            | "controller"
            | "country"
            | "countryCode"
            | "currency"
            | "currencyCode"
            | "dateOfBirth"
            | "description"
            | "destinationAccountCode"
            | "document"
            | "documentContent"
            | "documentExpirationDate"
            | "documentIssuerCountry"
            | "documentIssuerState"
            | "documentName"
            | "documentNumber"
            | "documentType"
            | "doingBusinessAs"
            | "drivingLicence"
            | "drivingLicenceBack"
            | "drivingLicenceFront"
            | "drivingLicense"
            | "email"
            | "firstName"
            | "formType"
            | "fullPhoneNumber"
            | "gender"
            | "hopWebserviceUser"
            | "houseNumberOrName"
            | "iban"
            | "idCard"
            | "idCardBack"
            | "idCardFront"
            | "idNumber"
            | "identityDocument"
            | "individualDetails"
            | "infix"
            | "jobTitle"
            | "lastName"
            | "lastReviewDate"
            | "legalArrangement"
            | "legalArrangementCode"
            | "legalArrangementEntity"
            | "legalArrangementEntityCode"
            | "legalArrangementLegalForm"
            | "legalArrangementMember"
            | "legalArrangementMembers"
            | "legalArrangementName"
            | "legalArrangementReference"
            | "legalArrangementRegistrationNumber"
            | "legalArrangementTaxNumber"
            | "legalArrangementType"
            | "legalBusinessName"
            | "legalEntity"
            | "legalEntityType"
            | "logo"
            | "merchantAccount"
            | "merchantCategoryCode"
            | "merchantHouseNumber"
            | "merchantReference"
            | "microDeposit"
            | "name"
            | "nationality"
            | "originalReference"
            | "ownerCity"
            | "ownerCountryCode"
            | "ownerDateOfBirth"
            | "ownerHouseNumberOrName"
            | "ownerName"
            | "ownerPostalCode"
            | "ownerState"
            | "ownerStreet"
            | "passport"
            | "passportNumber"
            | "payoutMethodCode"
            | "payoutSchedule"
            | "pciSelfAssessment"
            | "personalData"
            | "phoneCountryCode"
            | "phoneNumber"
            | "postalCode"
            | "primaryCurrency"
            | "reason"
            | "registrationNumber"
            | "returnUrl"
            | "schedule"
            | "shareholder"
            | "shareholderCode"
            | "shareholderCodeAndSignatoryCode"
            | "shareholderCodeOrSignatoryCode"
            | "shareholderType"
            | "shareholderTypes"
            | "shopperInteraction"
            | "signatory"
            | "signatoryCode"
            | "socialSecurityNumber"
            | "sourceAccountCode"
            | "splitAccount"
            | "splitConfigurationUUID"
            | "splitCurrency"
            | "splitValue"
            | "splits"
            | "stateOrProvince"
            | "status"
            | "stockExchange"
            | "stockNumber"
            | "stockTicker"
            | "store"
            | "storeDetail"
            | "storeName"
            | "storeReference"
            | "street"
            | "taxId"
            | "tier"
            | "tierNumber"
            | "transferCode"
            | "ultimateParentCompany"
            | "ultimateParentCompanyAddressDetails"
            | "ultimateParentCompanyAddressDetailsCountry"
            | "ultimateParentCompanyBusinessDetails"
            | "ultimateParentCompanyBusinessDetailsLegalBusinessName"
            | "ultimateParentCompanyBusinessDetailsRegistrationNumber"
            | "ultimateParentCompanyCode"
            | "ultimateParentCompanyStockExchange"
            | "ultimateParentCompanyStockNumber"
            | "ultimateParentCompanyStockNumberOrStockTicker"
            | "ultimateParentCompanyStockTicker"
            | "unknown"
            | "value"
            | "verificationType"
            | "virtualAccount"
            | "visaNumber"
            | "webAddress"
            | "year";
          /**
           * The code of the shareholder that the field belongs to. If empty, the field belongs to an account holder.
           */
          shareholderCode?: string;
          [k: string]: unknown;
        };
        [k: string]: unknown;
      }[];
      /**
       * The reference of a request. Can be used to uniquely identify the request.
       */
      pspReference?: string;
      /**
       * The result code.
       */
      resultCode?: string;
      [k: string]: unknown;
    };
    GetNotificationConfigurationListResponse: {
      /**
       * Details of the notification subscription configurations.
       */
      configurations?: {
        /**
         * Indicates whether the notification subscription is active.
         */
        active?: boolean;
        /**
         * The version of the notification to which you are subscribing. To make sure that your integration can properly process the notification, subscribe to the same version as the API that you're using.
         */
        apiVersion?: number;
        /**
         * A description of the notification subscription configuration.
         */
        description?: string;
        /**
         * Contains objects that define event types and their subscription settings.
         */
        eventConfigs?: {
          /**
           * The type of event.
           *
           * Possible values: **ACCOUNT_CLOSED**, **ACCOUNT_CREATED**, **ACCOUNT_FUNDS_BELOW_THRESHOLD**, **ACCOUNT_HOLDER_CREATED**, **ACCOUNT_HOLDER_LIMIT_REACHED**, **ACCOUNT_HOLDER_PAYOUT**, **ACCOUNT_HOLDER_STATUS_CHANGE**, **ACCOUNT_HOLDER_STORE_STATUS_CHANGE**, **ACCOUNT_HOLDER_UPCOMING_DEADLINE**, **ACCOUNT_HOLDER_UPDATED**, **ACCOUNT_HOLDER_VERIFICATION**, **ACCOUNT_UPDATED**, **BENEFICIARY_SETUP**, **COMPENSATE_NEGATIVE_BALANCE**, **DIRECT_DEBIT_INITIATED**, **PAYMENT_FAILURE**, **REFUND_FUNDS_TRANSFER**, **REPORT_AVAILABLE**, **SCHEDULED_REFUNDS**, **TRANSFER_FUNDS**.
           */
          eventType:
            | "ACCOUNT_CLOSED"
            | "ACCOUNT_CREATED"
            | "ACCOUNT_FUNDS_BELOW_THRESHOLD"
            | "ACCOUNT_HOLDER_CREATED"
            | "ACCOUNT_HOLDER_LIMIT_REACHED"
            | "ACCOUNT_HOLDER_MIGRATED"
            | "ACCOUNT_HOLDER_PAYOUT"
            | "ACCOUNT_HOLDER_STATUS_CHANGE"
            | "ACCOUNT_HOLDER_STORE_STATUS_CHANGE"
            | "ACCOUNT_HOLDER_UPCOMING_DEADLINE"
            | "ACCOUNT_HOLDER_UPDATED"
            | "ACCOUNT_HOLDER_VERIFICATION"
            | "ACCOUNT_UPDATED"
            | "BENEFICIARY_SETUP"
            | "COMPENSATE_NEGATIVE_BALANCE"
            | "DIRECT_DEBIT_INITIATED"
            | "FUNDS_MIGRATED"
            | "PAYMENT_FAILURE"
            | "PENDING_CREDIT"
            | "REFUND_FUNDS_TRANSFER"
            | "REPORT_AVAILABLE"
            | "SCHEDULED_REFUNDS"
            | "SCORE_SIGNAL_TRIGGERED"
            | "TRANSFER_FUNDS"
            | "TRANSFER_NOT_PAIDOUT_TRANSFERS";
          /**
           * Indicates whether the specified `eventType` is sent to your webhook endpoint.
           * Possible values:
           * * **INCLUDE**: Send the specified `eventType`.
           * * **EXCLUDE**: Send all event types except the specified `eventType` and other event types with the `includeMode` set to **EXCLUDE**.
           */
          includeMode: "EXCLUDE" | "INCLUDE";
          [k: string]: unknown;
        }[];
        /**
         * A string with which to salt the notification(s) before hashing. If this field is provided, a hash value will be included under the notification header `HmacSignature` and the hash protocol will be included under the notification header `Protocol`. A notification body along with its `hmacSignatureKey` and `Protocol` can be used to calculate a hash value; matching this hash value with the `HmacSignature` will ensure that the notification body has not been tampered with or corrupted.
         *
         * >Must be a 32-byte hex-encoded string (i.e. a string containing 64 hexadecimal characters; e.g. "b0ea55c2fe60d4d1d605e9c385e0e7f7e6cafbb939ce07010f31a327a0871f27").
         *
         * The omission of this field will preclude the provision of the `HmacSignature` and `Protocol` headers in notification(s).
         */
        hmacSignatureKey?: string;
        /**
         * Adyen-generated ID for the entry, returned in the response when you create a notification configuration. Required when updating an existing configuration using [`/updateNotificationConfiguration`](https://docs.adyen.com/api-explorer/#/NotificationConfigurationService/latest/post/updateNotificationConfiguration).
         */
        notificationId?: number;
        /**
         * The password to use when accessing the notifyURL with the specified username.
         */
        notifyPassword?: string;
        /**
         * The URL to which the notifications are to be sent.
         */
        notifyURL?: string;
        /**
         * The username to use when accessing the notifyURL.
         */
        notifyUsername?: string;
        /**
         * The SSL protocol employed by the endpoint.
         * >Permitted values: `TLSv12`, `TLSv13`.
         */
        sslProtocol?: "TLSv12" | "TLSv13";
        [k: string]: unknown;
      }[];
      /**
       * Contains field validation errors that would prevent requests from being processed.
       */
      invalidFields?: {
        /**
         * The validation error code.
         */
        errorCode?: number;
        /**
         * A description of the validation error.
         */
        errorDescription?: string;
        fieldType?: {
          /**
           * The full name of the property.
           */
          field?: string;
          /**
           * The type of the field.
           */
          fieldName?:
            | "accountCode"
            | "accountHolderCode"
            | "accountHolderDetails"
            | "accountNumber"
            | "accountStateType"
            | "accountStatus"
            | "accountType"
            | "address"
            | "balanceAccount"
            | "balanceAccountActive"
            | "balanceAccountCode"
            | "balanceAccountId"
            | "bankAccount"
            | "bankAccountCode"
            | "bankAccountName"
            | "bankAccountUUID"
            | "bankBicSwift"
            | "bankCity"
            | "bankCode"
            | "bankName"
            | "bankStatement"
            | "branchCode"
            | "businessContact"
            | "cardToken"
            | "checkCode"
            | "city"
            | "companyRegistration"
            | "constitutionalDocument"
            | "controller"
            | "country"
            | "countryCode"
            | "currency"
            | "currencyCode"
            | "dateOfBirth"
            | "description"
            | "destinationAccountCode"
            | "document"
            | "documentContent"
            | "documentExpirationDate"
            | "documentIssuerCountry"
            | "documentIssuerState"
            | "documentName"
            | "documentNumber"
            | "documentType"
            | "doingBusinessAs"
            | "drivingLicence"
            | "drivingLicenceBack"
            | "drivingLicenceFront"
            | "drivingLicense"
            | "email"
            | "firstName"
            | "formType"
            | "fullPhoneNumber"
            | "gender"
            | "hopWebserviceUser"
            | "houseNumberOrName"
            | "iban"
            | "idCard"
            | "idCardBack"
            | "idCardFront"
            | "idNumber"
            | "identityDocument"
            | "individualDetails"
            | "infix"
            | "jobTitle"
            | "lastName"
            | "lastReviewDate"
            | "legalArrangement"
            | "legalArrangementCode"
            | "legalArrangementEntity"
            | "legalArrangementEntityCode"
            | "legalArrangementLegalForm"
            | "legalArrangementMember"
            | "legalArrangementMembers"
            | "legalArrangementName"
            | "legalArrangementReference"
            | "legalArrangementRegistrationNumber"
            | "legalArrangementTaxNumber"
            | "legalArrangementType"
            | "legalBusinessName"
            | "legalEntity"
            | "legalEntityType"
            | "logo"
            | "merchantAccount"
            | "merchantCategoryCode"
            | "merchantHouseNumber"
            | "merchantReference"
            | "microDeposit"
            | "name"
            | "nationality"
            | "originalReference"
            | "ownerCity"
            | "ownerCountryCode"
            | "ownerDateOfBirth"
            | "ownerHouseNumberOrName"
            | "ownerName"
            | "ownerPostalCode"
            | "ownerState"
            | "ownerStreet"
            | "passport"
            | "passportNumber"
            | "payoutMethodCode"
            | "payoutSchedule"
            | "pciSelfAssessment"
            | "personalData"
            | "phoneCountryCode"
            | "phoneNumber"
            | "postalCode"
            | "primaryCurrency"
            | "reason"
            | "registrationNumber"
            | "returnUrl"
            | "schedule"
            | "shareholder"
            | "shareholderCode"
            | "shareholderCodeAndSignatoryCode"
            | "shareholderCodeOrSignatoryCode"
            | "shareholderType"
            | "shareholderTypes"
            | "shopperInteraction"
            | "signatory"
            | "signatoryCode"
            | "socialSecurityNumber"
            | "sourceAccountCode"
            | "splitAccount"
            | "splitConfigurationUUID"
            | "splitCurrency"
            | "splitValue"
            | "splits"
            | "stateOrProvince"
            | "status"
            | "stockExchange"
            | "stockNumber"
            | "stockTicker"
            | "store"
            | "storeDetail"
            | "storeName"
            | "storeReference"
            | "street"
            | "taxId"
            | "tier"
            | "tierNumber"
            | "transferCode"
            | "ultimateParentCompany"
            | "ultimateParentCompanyAddressDetails"
            | "ultimateParentCompanyAddressDetailsCountry"
            | "ultimateParentCompanyBusinessDetails"
            | "ultimateParentCompanyBusinessDetailsLegalBusinessName"
            | "ultimateParentCompanyBusinessDetailsRegistrationNumber"
            | "ultimateParentCompanyCode"
            | "ultimateParentCompanyStockExchange"
            | "ultimateParentCompanyStockNumber"
            | "ultimateParentCompanyStockNumberOrStockTicker"
            | "ultimateParentCompanyStockTicker"
            | "unknown"
            | "value"
            | "verificationType"
            | "virtualAccount"
            | "visaNumber"
            | "webAddress"
            | "year";
          /**
           * The code of the shareholder that the field belongs to. If empty, the field belongs to an account holder.
           */
          shareholderCode?: string;
          [k: string]: unknown;
        };
        [k: string]: unknown;
      }[];
      /**
       * The reference of a request. Can be used to uniquely identify the request.
       */
      pspReference?: string;
      /**
       * The result code.
       */
      resultCode?: string;
      [k: string]: unknown;
    };
    GetNotificationConfigurationRequest: {
      /**
       * The ID of the notification subscription configuration whose details are to be retrieved.
       */
      notificationId: number;
      [k: string]: unknown;
    };
    GetNotificationConfigurationResponse: {
      configurationDetails: {
        /**
         * Indicates whether the notification subscription is active.
         */
        active?: boolean;
        /**
         * The version of the notification to which you are subscribing. To make sure that your integration can properly process the notification, subscribe to the same version as the API that you're using.
         */
        apiVersion?: number;
        /**
         * A description of the notification subscription configuration.
         */
        description?: string;
        /**
         * Contains objects that define event types and their subscription settings.
         */
        eventConfigs?: {
          /**
           * The type of event.
           *
           * Possible values: **ACCOUNT_CLOSED**, **ACCOUNT_CREATED**, **ACCOUNT_FUNDS_BELOW_THRESHOLD**, **ACCOUNT_HOLDER_CREATED**, **ACCOUNT_HOLDER_LIMIT_REACHED**, **ACCOUNT_HOLDER_PAYOUT**, **ACCOUNT_HOLDER_STATUS_CHANGE**, **ACCOUNT_HOLDER_STORE_STATUS_CHANGE**, **ACCOUNT_HOLDER_UPCOMING_DEADLINE**, **ACCOUNT_HOLDER_UPDATED**, **ACCOUNT_HOLDER_VERIFICATION**, **ACCOUNT_UPDATED**, **BENEFICIARY_SETUP**, **COMPENSATE_NEGATIVE_BALANCE**, **DIRECT_DEBIT_INITIATED**, **PAYMENT_FAILURE**, **REFUND_FUNDS_TRANSFER**, **REPORT_AVAILABLE**, **SCHEDULED_REFUNDS**, **TRANSFER_FUNDS**.
           */
          eventType:
            | "ACCOUNT_CLOSED"
            | "ACCOUNT_CREATED"
            | "ACCOUNT_FUNDS_BELOW_THRESHOLD"
            | "ACCOUNT_HOLDER_CREATED"
            | "ACCOUNT_HOLDER_LIMIT_REACHED"
            | "ACCOUNT_HOLDER_MIGRATED"
            | "ACCOUNT_HOLDER_PAYOUT"
            | "ACCOUNT_HOLDER_STATUS_CHANGE"
            | "ACCOUNT_HOLDER_STORE_STATUS_CHANGE"
            | "ACCOUNT_HOLDER_UPCOMING_DEADLINE"
            | "ACCOUNT_HOLDER_UPDATED"
            | "ACCOUNT_HOLDER_VERIFICATION"
            | "ACCOUNT_UPDATED"
            | "BENEFICIARY_SETUP"
            | "COMPENSATE_NEGATIVE_BALANCE"
            | "DIRECT_DEBIT_INITIATED"
            | "FUNDS_MIGRATED"
            | "PAYMENT_FAILURE"
            | "PENDING_CREDIT"
            | "REFUND_FUNDS_TRANSFER"
            | "REPORT_AVAILABLE"
            | "SCHEDULED_REFUNDS"
            | "SCORE_SIGNAL_TRIGGERED"
            | "TRANSFER_FUNDS"
            | "TRANSFER_NOT_PAIDOUT_TRANSFERS";
          /**
           * Indicates whether the specified `eventType` is sent to your webhook endpoint.
           * Possible values:
           * * **INCLUDE**: Send the specified `eventType`.
           * * **EXCLUDE**: Send all event types except the specified `eventType` and other event types with the `includeMode` set to **EXCLUDE**.
           */
          includeMode: "EXCLUDE" | "INCLUDE";
          [k: string]: unknown;
        }[];
        /**
         * A string with which to salt the notification(s) before hashing. If this field is provided, a hash value will be included under the notification header `HmacSignature` and the hash protocol will be included under the notification header `Protocol`. A notification body along with its `hmacSignatureKey` and `Protocol` can be used to calculate a hash value; matching this hash value with the `HmacSignature` will ensure that the notification body has not been tampered with or corrupted.
         *
         * >Must be a 32-byte hex-encoded string (i.e. a string containing 64 hexadecimal characters; e.g. "b0ea55c2fe60d4d1d605e9c385e0e7f7e6cafbb939ce07010f31a327a0871f27").
         *
         * The omission of this field will preclude the provision of the `HmacSignature` and `Protocol` headers in notification(s).
         */
        hmacSignatureKey?: string;
        /**
         * Adyen-generated ID for the entry, returned in the response when you create a notification configuration. Required when updating an existing configuration using [`/updateNotificationConfiguration`](https://docs.adyen.com/api-explorer/#/NotificationConfigurationService/latest/post/updateNotificationConfiguration).
         */
        notificationId?: number;
        /**
         * The password to use when accessing the notifyURL with the specified username.
         */
        notifyPassword?: string;
        /**
         * The URL to which the notifications are to be sent.
         */
        notifyURL?: string;
        /**
         * The username to use when accessing the notifyURL.
         */
        notifyUsername?: string;
        /**
         * The SSL protocol employed by the endpoint.
         * >Permitted values: `TLSv12`, `TLSv13`.
         */
        sslProtocol?: "TLSv12" | "TLSv13";
        [k: string]: unknown;
      };
      /**
       * Contains field validation errors that would prevent requests from being processed.
       */
      invalidFields?: {
        /**
         * The validation error code.
         */
        errorCode?: number;
        /**
         * A description of the validation error.
         */
        errorDescription?: string;
        fieldType?: {
          /**
           * The full name of the property.
           */
          field?: string;
          /**
           * The type of the field.
           */
          fieldName?:
            | "accountCode"
            | "accountHolderCode"
            | "accountHolderDetails"
            | "accountNumber"
            | "accountStateType"
            | "accountStatus"
            | "accountType"
            | "address"
            | "balanceAccount"
            | "balanceAccountActive"
            | "balanceAccountCode"
            | "balanceAccountId"
            | "bankAccount"
            | "bankAccountCode"
            | "bankAccountName"
            | "bankAccountUUID"
            | "bankBicSwift"
            | "bankCity"
            | "bankCode"
            | "bankName"
            | "bankStatement"
            | "branchCode"
            | "businessContact"
            | "cardToken"
            | "checkCode"
            | "city"
            | "companyRegistration"
            | "constitutionalDocument"
            | "controller"
            | "country"
            | "countryCode"
            | "currency"
            | "currencyCode"
            | "dateOfBirth"
            | "description"
            | "destinationAccountCode"
            | "document"
            | "documentContent"
            | "documentExpirationDate"
            | "documentIssuerCountry"
            | "documentIssuerState"
            | "documentName"
            | "documentNumber"
            | "documentType"
            | "doingBusinessAs"
            | "drivingLicence"
            | "drivingLicenceBack"
            | "drivingLicenceFront"
            | "drivingLicense"
            | "email"
            | "firstName"
            | "formType"
            | "fullPhoneNumber"
            | "gender"
            | "hopWebserviceUser"
            | "houseNumberOrName"
            | "iban"
            | "idCard"
            | "idCardBack"
            | "idCardFront"
            | "idNumber"
            | "identityDocument"
            | "individualDetails"
            | "infix"
            | "jobTitle"
            | "lastName"
            | "lastReviewDate"
            | "legalArrangement"
            | "legalArrangementCode"
            | "legalArrangementEntity"
            | "legalArrangementEntityCode"
            | "legalArrangementLegalForm"
            | "legalArrangementMember"
            | "legalArrangementMembers"
            | "legalArrangementName"
            | "legalArrangementReference"
            | "legalArrangementRegistrationNumber"
            | "legalArrangementTaxNumber"
            | "legalArrangementType"
            | "legalBusinessName"
            | "legalEntity"
            | "legalEntityType"
            | "logo"
            | "merchantAccount"
            | "merchantCategoryCode"
            | "merchantHouseNumber"
            | "merchantReference"
            | "microDeposit"
            | "name"
            | "nationality"
            | "originalReference"
            | "ownerCity"
            | "ownerCountryCode"
            | "ownerDateOfBirth"
            | "ownerHouseNumberOrName"
            | "ownerName"
            | "ownerPostalCode"
            | "ownerState"
            | "ownerStreet"
            | "passport"
            | "passportNumber"
            | "payoutMethodCode"
            | "payoutSchedule"
            | "pciSelfAssessment"
            | "personalData"
            | "phoneCountryCode"
            | "phoneNumber"
            | "postalCode"
            | "primaryCurrency"
            | "reason"
            | "registrationNumber"
            | "returnUrl"
            | "schedule"
            | "shareholder"
            | "shareholderCode"
            | "shareholderCodeAndSignatoryCode"
            | "shareholderCodeOrSignatoryCode"
            | "shareholderType"
            | "shareholderTypes"
            | "shopperInteraction"
            | "signatory"
            | "signatoryCode"
            | "socialSecurityNumber"
            | "sourceAccountCode"
            | "splitAccount"
            | "splitConfigurationUUID"
            | "splitCurrency"
            | "splitValue"
            | "splits"
            | "stateOrProvince"
            | "status"
            | "stockExchange"
            | "stockNumber"
            | "stockTicker"
            | "store"
            | "storeDetail"
            | "storeName"
            | "storeReference"
            | "street"
            | "taxId"
            | "tier"
            | "tierNumber"
            | "transferCode"
            | "ultimateParentCompany"
            | "ultimateParentCompanyAddressDetails"
            | "ultimateParentCompanyAddressDetailsCountry"
            | "ultimateParentCompanyBusinessDetails"
            | "ultimateParentCompanyBusinessDetailsLegalBusinessName"
            | "ultimateParentCompanyBusinessDetailsRegistrationNumber"
            | "ultimateParentCompanyCode"
            | "ultimateParentCompanyStockExchange"
            | "ultimateParentCompanyStockNumber"
            | "ultimateParentCompanyStockNumberOrStockTicker"
            | "ultimateParentCompanyStockTicker"
            | "unknown"
            | "value"
            | "verificationType"
            | "virtualAccount"
            | "visaNumber"
            | "webAddress"
            | "year";
          /**
           * The code of the shareholder that the field belongs to. If empty, the field belongs to an account holder.
           */
          shareholderCode?: string;
          [k: string]: unknown;
        };
        [k: string]: unknown;
      }[];
      /**
       * The reference of a request. Can be used to uniquely identify the request.
       */
      pspReference?: string;
      /**
       * The result code.
       */
      resultCode?: string;
      [k: string]: unknown;
    };
    NotificationConfigurationDetails: {
      /**
       * Indicates whether the notification subscription is active.
       */
      active?: boolean;
      /**
       * The version of the notification to which you are subscribing. To make sure that your integration can properly process the notification, subscribe to the same version as the API that you're using.
       */
      apiVersion?: number;
      /**
       * A description of the notification subscription configuration.
       */
      description?: string;
      /**
       * Contains objects that define event types and their subscription settings.
       */
      eventConfigs?: {
        /**
         * The type of event.
         *
         * Possible values: **ACCOUNT_CLOSED**, **ACCOUNT_CREATED**, **ACCOUNT_FUNDS_BELOW_THRESHOLD**, **ACCOUNT_HOLDER_CREATED**, **ACCOUNT_HOLDER_LIMIT_REACHED**, **ACCOUNT_HOLDER_PAYOUT**, **ACCOUNT_HOLDER_STATUS_CHANGE**, **ACCOUNT_HOLDER_STORE_STATUS_CHANGE**, **ACCOUNT_HOLDER_UPCOMING_DEADLINE**, **ACCOUNT_HOLDER_UPDATED**, **ACCOUNT_HOLDER_VERIFICATION**, **ACCOUNT_UPDATED**, **BENEFICIARY_SETUP**, **COMPENSATE_NEGATIVE_BALANCE**, **DIRECT_DEBIT_INITIATED**, **PAYMENT_FAILURE**, **REFUND_FUNDS_TRANSFER**, **REPORT_AVAILABLE**, **SCHEDULED_REFUNDS**, **TRANSFER_FUNDS**.
         */
        eventType:
          | "ACCOUNT_CLOSED"
          | "ACCOUNT_CREATED"
          | "ACCOUNT_FUNDS_BELOW_THRESHOLD"
          | "ACCOUNT_HOLDER_CREATED"
          | "ACCOUNT_HOLDER_LIMIT_REACHED"
          | "ACCOUNT_HOLDER_MIGRATED"
          | "ACCOUNT_HOLDER_PAYOUT"
          | "ACCOUNT_HOLDER_STATUS_CHANGE"
          | "ACCOUNT_HOLDER_STORE_STATUS_CHANGE"
          | "ACCOUNT_HOLDER_UPCOMING_DEADLINE"
          | "ACCOUNT_HOLDER_UPDATED"
          | "ACCOUNT_HOLDER_VERIFICATION"
          | "ACCOUNT_UPDATED"
          | "BENEFICIARY_SETUP"
          | "COMPENSATE_NEGATIVE_BALANCE"
          | "DIRECT_DEBIT_INITIATED"
          | "FUNDS_MIGRATED"
          | "PAYMENT_FAILURE"
          | "PENDING_CREDIT"
          | "REFUND_FUNDS_TRANSFER"
          | "REPORT_AVAILABLE"
          | "SCHEDULED_REFUNDS"
          | "SCORE_SIGNAL_TRIGGERED"
          | "TRANSFER_FUNDS"
          | "TRANSFER_NOT_PAIDOUT_TRANSFERS";
        /**
         * Indicates whether the specified `eventType` is sent to your webhook endpoint.
         * Possible values:
         * * **INCLUDE**: Send the specified `eventType`.
         * * **EXCLUDE**: Send all event types except the specified `eventType` and other event types with the `includeMode` set to **EXCLUDE**.
         */
        includeMode: "EXCLUDE" | "INCLUDE";
        [k: string]: unknown;
      }[];
      /**
       * A string with which to salt the notification(s) before hashing. If this field is provided, a hash value will be included under the notification header `HmacSignature` and the hash protocol will be included under the notification header `Protocol`. A notification body along with its `hmacSignatureKey` and `Protocol` can be used to calculate a hash value; matching this hash value with the `HmacSignature` will ensure that the notification body has not been tampered with or corrupted.
       *
       * >Must be a 32-byte hex-encoded string (i.e. a string containing 64 hexadecimal characters; e.g. "b0ea55c2fe60d4d1d605e9c385e0e7f7e6cafbb939ce07010f31a327a0871f27").
       *
       * The omission of this field will preclude the provision of the `HmacSignature` and `Protocol` headers in notification(s).
       */
      hmacSignatureKey?: string;
      /**
       * Adyen-generated ID for the entry, returned in the response when you create a notification configuration. Required when updating an existing configuration using [`/updateNotificationConfiguration`](https://docs.adyen.com/api-explorer/#/NotificationConfigurationService/latest/post/updateNotificationConfiguration).
       */
      notificationId?: number;
      /**
       * The password to use when accessing the notifyURL with the specified username.
       */
      notifyPassword?: string;
      /**
       * The URL to which the notifications are to be sent.
       */
      notifyURL?: string;
      /**
       * The username to use when accessing the notifyURL.
       */
      notifyUsername?: string;
      /**
       * The SSL protocol employed by the endpoint.
       * >Permitted values: `TLSv12`, `TLSv13`.
       */
      sslProtocol?: "TLSv12" | "TLSv13";
      [k: string]: unknown;
    };
    NotificationEventConfiguration: {
      /**
       * The type of event.
       *
       * Possible values: **ACCOUNT_CLOSED**, **ACCOUNT_CREATED**, **ACCOUNT_FUNDS_BELOW_THRESHOLD**, **ACCOUNT_HOLDER_CREATED**, **ACCOUNT_HOLDER_LIMIT_REACHED**, **ACCOUNT_HOLDER_PAYOUT**, **ACCOUNT_HOLDER_STATUS_CHANGE**, **ACCOUNT_HOLDER_STORE_STATUS_CHANGE**, **ACCOUNT_HOLDER_UPCOMING_DEADLINE**, **ACCOUNT_HOLDER_UPDATED**, **ACCOUNT_HOLDER_VERIFICATION**, **ACCOUNT_UPDATED**, **BENEFICIARY_SETUP**, **COMPENSATE_NEGATIVE_BALANCE**, **DIRECT_DEBIT_INITIATED**, **PAYMENT_FAILURE**, **REFUND_FUNDS_TRANSFER**, **REPORT_AVAILABLE**, **SCHEDULED_REFUNDS**, **TRANSFER_FUNDS**.
       */
      eventType:
        | "ACCOUNT_CLOSED"
        | "ACCOUNT_CREATED"
        | "ACCOUNT_FUNDS_BELOW_THRESHOLD"
        | "ACCOUNT_HOLDER_CREATED"
        | "ACCOUNT_HOLDER_LIMIT_REACHED"
        | "ACCOUNT_HOLDER_MIGRATED"
        | "ACCOUNT_HOLDER_PAYOUT"
        | "ACCOUNT_HOLDER_STATUS_CHANGE"
        | "ACCOUNT_HOLDER_STORE_STATUS_CHANGE"
        | "ACCOUNT_HOLDER_UPCOMING_DEADLINE"
        | "ACCOUNT_HOLDER_UPDATED"
        | "ACCOUNT_HOLDER_VERIFICATION"
        | "ACCOUNT_UPDATED"
        | "BENEFICIARY_SETUP"
        | "COMPENSATE_NEGATIVE_BALANCE"
        | "DIRECT_DEBIT_INITIATED"
        | "FUNDS_MIGRATED"
        | "PAYMENT_FAILURE"
        | "PENDING_CREDIT"
        | "REFUND_FUNDS_TRANSFER"
        | "REPORT_AVAILABLE"
        | "SCHEDULED_REFUNDS"
        | "SCORE_SIGNAL_TRIGGERED"
        | "TRANSFER_FUNDS"
        | "TRANSFER_NOT_PAIDOUT_TRANSFERS";
      /**
       * Indicates whether the specified `eventType` is sent to your webhook endpoint.
       * Possible values:
       * * **INCLUDE**: Send the specified `eventType`.
       * * **EXCLUDE**: Send all event types except the specified `eventType` and other event types with the `includeMode` set to **EXCLUDE**.
       */
      includeMode: "EXCLUDE" | "INCLUDE";
      [k: string]: unknown;
    };
    ServiceError: {
      /**
       * The error code mapped to the error message.
       */
      errorCode?: string;
      /**
       * The category of the error.
       */
      errorType?: string;
      /**
       * A short explanation of the issue.
       */
      message?: string;
      /**
       * The PSP reference of the payment.
       */
      pspReference?: string;
      /**
       * The HTTP response status.
       */
      status?: number;
      [k: string]: unknown;
    };
    TestNotificationConfigurationRequest: {
      /**
       * The event types to test.  If left blank, then all of the configured event types will be tested.
       * >Permitted values: `ACCOUNT_HOLDER_CREATED`, `ACCOUNT_CREATED`, `ACCOUNT_UPDATED`, `ACCOUNT_HOLDER_UPDATED`, `ACCOUNT_HOLDER_STATUS_CHANGE`, `ACCOUNT_HOLDER_STORE_STATUS_CHANGE` `ACCOUNT_HOLDER_VERIFICATION`, `ACCOUNT_HOLDER_LIMIT_REACHED`, `ACCOUNT_HOLDER_PAYOUT`, `PAYMENT_FAILURE`, `SCHEDULED_REFUNDS`, `REPORT_AVAILABLE`, `TRANSFER_FUNDS`, `BENEFICIARY_SETUP`, `COMPENSATE_NEGATIVE_BALANCE`.
       */
      eventTypes?: (
        | "ACCOUNT_CLOSED"
        | "ACCOUNT_CREATED"
        | "ACCOUNT_FUNDS_BELOW_THRESHOLD"
        | "ACCOUNT_HOLDER_CREATED"
        | "ACCOUNT_HOLDER_LIMIT_REACHED"
        | "ACCOUNT_HOLDER_MIGRATED"
        | "ACCOUNT_HOLDER_PAYOUT"
        | "ACCOUNT_HOLDER_STATUS_CHANGE"
        | "ACCOUNT_HOLDER_STORE_STATUS_CHANGE"
        | "ACCOUNT_HOLDER_UPCOMING_DEADLINE"
        | "ACCOUNT_HOLDER_UPDATED"
        | "ACCOUNT_HOLDER_VERIFICATION"
        | "ACCOUNT_UPDATED"
        | "BENEFICIARY_SETUP"
        | "COMPENSATE_NEGATIVE_BALANCE"
        | "DIRECT_DEBIT_INITIATED"
        | "FUNDS_MIGRATED"
        | "PAYMENT_FAILURE"
        | "PENDING_CREDIT"
        | "REFUND_FUNDS_TRANSFER"
        | "REPORT_AVAILABLE"
        | "SCHEDULED_REFUNDS"
        | "SCORE_SIGNAL_TRIGGERED"
        | "TRANSFER_FUNDS"
        | "TRANSFER_NOT_PAIDOUT_TRANSFERS"
      )[];
      /**
       * The ID of the notification subscription configuration to be tested.
       */
      notificationId: number;
      [k: string]: unknown;
    };
    TestNotificationConfigurationResponse: {
      /**
       * Any error messages encountered.
       */
      errorMessages?: string[];
      /**
       * The event types that were tested.
       * >Permitted values: `ACCOUNT_HOLDER_CREATED`, `ACCOUNT_CREATED`, `ACCOUNT_UPDATED`, `ACCOUNT_HOLDER_UPDATED`, `ACCOUNT_HOLDER_STATUS_CHANGE`, `ACCOUNT_HOLDER_STORE_STATUS_CHANGE` `ACCOUNT_HOLDER_VERIFICATION`, `ACCOUNT_HOLDER_LIMIT_REACHED`, `ACCOUNT_HOLDER_PAYOUT`, `PAYMENT_FAILURE`, `SCHEDULED_REFUNDS`, `REPORT_AVAILABLE`, `TRANSFER_FUNDS`, `BENEFICIARY_SETUP`, `COMPENSATE_NEGATIVE_BALANCE`.
       */
      eventTypes?: (
        | "ACCOUNT_CLOSED"
        | "ACCOUNT_CREATED"
        | "ACCOUNT_FUNDS_BELOW_THRESHOLD"
        | "ACCOUNT_HOLDER_CREATED"
        | "ACCOUNT_HOLDER_LIMIT_REACHED"
        | "ACCOUNT_HOLDER_MIGRATED"
        | "ACCOUNT_HOLDER_PAYOUT"
        | "ACCOUNT_HOLDER_STATUS_CHANGE"
        | "ACCOUNT_HOLDER_STORE_STATUS_CHANGE"
        | "ACCOUNT_HOLDER_UPCOMING_DEADLINE"
        | "ACCOUNT_HOLDER_UPDATED"
        | "ACCOUNT_HOLDER_VERIFICATION"
        | "ACCOUNT_UPDATED"
        | "BENEFICIARY_SETUP"
        | "COMPENSATE_NEGATIVE_BALANCE"
        | "DIRECT_DEBIT_INITIATED"
        | "FUNDS_MIGRATED"
        | "PAYMENT_FAILURE"
        | "PENDING_CREDIT"
        | "REFUND_FUNDS_TRANSFER"
        | "REPORT_AVAILABLE"
        | "SCHEDULED_REFUNDS"
        | "SCORE_SIGNAL_TRIGGERED"
        | "TRANSFER_FUNDS"
        | "TRANSFER_NOT_PAIDOUT_TRANSFERS"
      )[];
      /**
       * The notification message and related response messages.
       */
      exchangeMessages?: {
        messageCode?: string;
        messageDescription?: string;
        [k: string]: unknown;
      }[];
      /**
       * Contains field validation errors that would prevent requests from being processed.
       */
      invalidFields?: {
        /**
         * The validation error code.
         */
        errorCode?: number;
        /**
         * A description of the validation error.
         */
        errorDescription?: string;
        fieldType?: {
          /**
           * The full name of the property.
           */
          field?: string;
          /**
           * The type of the field.
           */
          fieldName?:
            | "accountCode"
            | "accountHolderCode"
            | "accountHolderDetails"
            | "accountNumber"
            | "accountStateType"
            | "accountStatus"
            | "accountType"
            | "address"
            | "balanceAccount"
            | "balanceAccountActive"
            | "balanceAccountCode"
            | "balanceAccountId"
            | "bankAccount"
            | "bankAccountCode"
            | "bankAccountName"
            | "bankAccountUUID"
            | "bankBicSwift"
            | "bankCity"
            | "bankCode"
            | "bankName"
            | "bankStatement"
            | "branchCode"
            | "businessContact"
            | "cardToken"
            | "checkCode"
            | "city"
            | "companyRegistration"
            | "constitutionalDocument"
            | "controller"
            | "country"
            | "countryCode"
            | "currency"
            | "currencyCode"
            | "dateOfBirth"
            | "description"
            | "destinationAccountCode"
            | "document"
            | "documentContent"
            | "documentExpirationDate"
            | "documentIssuerCountry"
            | "documentIssuerState"
            | "documentName"
            | "documentNumber"
            | "documentType"
            | "doingBusinessAs"
            | "drivingLicence"
            | "drivingLicenceBack"
            | "drivingLicenceFront"
            | "drivingLicense"
            | "email"
            | "firstName"
            | "formType"
            | "fullPhoneNumber"
            | "gender"
            | "hopWebserviceUser"
            | "houseNumberOrName"
            | "iban"
            | "idCard"
            | "idCardBack"
            | "idCardFront"
            | "idNumber"
            | "identityDocument"
            | "individualDetails"
            | "infix"
            | "jobTitle"
            | "lastName"
            | "lastReviewDate"
            | "legalArrangement"
            | "legalArrangementCode"
            | "legalArrangementEntity"
            | "legalArrangementEntityCode"
            | "legalArrangementLegalForm"
            | "legalArrangementMember"
            | "legalArrangementMembers"
            | "legalArrangementName"
            | "legalArrangementReference"
            | "legalArrangementRegistrationNumber"
            | "legalArrangementTaxNumber"
            | "legalArrangementType"
            | "legalBusinessName"
            | "legalEntity"
            | "legalEntityType"
            | "logo"
            | "merchantAccount"
            | "merchantCategoryCode"
            | "merchantHouseNumber"
            | "merchantReference"
            | "microDeposit"
            | "name"
            | "nationality"
            | "originalReference"
            | "ownerCity"
            | "ownerCountryCode"
            | "ownerDateOfBirth"
            | "ownerHouseNumberOrName"
            | "ownerName"
            | "ownerPostalCode"
            | "ownerState"
            | "ownerStreet"
            | "passport"
            | "passportNumber"
            | "payoutMethodCode"
            | "payoutSchedule"
            | "pciSelfAssessment"
            | "personalData"
            | "phoneCountryCode"
            | "phoneNumber"
            | "postalCode"
            | "primaryCurrency"
            | "reason"
            | "registrationNumber"
            | "returnUrl"
            | "schedule"
            | "shareholder"
            | "shareholderCode"
            | "shareholderCodeAndSignatoryCode"
            | "shareholderCodeOrSignatoryCode"
            | "shareholderType"
            | "shareholderTypes"
            | "shopperInteraction"
            | "signatory"
            | "signatoryCode"
            | "socialSecurityNumber"
            | "sourceAccountCode"
            | "splitAccount"
            | "splitConfigurationUUID"
            | "splitCurrency"
            | "splitValue"
            | "splits"
            | "stateOrProvince"
            | "status"
            | "stockExchange"
            | "stockNumber"
            | "stockTicker"
            | "store"
            | "storeDetail"
            | "storeName"
            | "storeReference"
            | "street"
            | "taxId"
            | "tier"
            | "tierNumber"
            | "transferCode"
            | "ultimateParentCompany"
            | "ultimateParentCompanyAddressDetails"
            | "ultimateParentCompanyAddressDetailsCountry"
            | "ultimateParentCompanyBusinessDetails"
            | "ultimateParentCompanyBusinessDetailsLegalBusinessName"
            | "ultimateParentCompanyBusinessDetailsRegistrationNumber"
            | "ultimateParentCompanyCode"
            | "ultimateParentCompanyStockExchange"
            | "ultimateParentCompanyStockNumber"
            | "ultimateParentCompanyStockNumberOrStockTicker"
            | "ultimateParentCompanyStockTicker"
            | "unknown"
            | "value"
            | "verificationType"
            | "virtualAccount"
            | "visaNumber"
            | "webAddress"
            | "year";
          /**
           * The code of the shareholder that the field belongs to. If empty, the field belongs to an account holder.
           */
          shareholderCode?: string;
          [k: string]: unknown;
        };
        [k: string]: unknown;
      }[];
      /**
       * The ID of the notification subscription configuration.
       */
      notificationId: number;
      /**
       * A list of messages describing the testing steps.
       */
      okMessages?: string[];
      /**
       * The reference of a request. Can be used to uniquely identify the request.
       */
      pspReference?: string;
      /**
       * The result code.
       */
      resultCode?: string;
      [k: string]: unknown;
    };
    UpdateNotificationConfigurationRequest: {
      configurationDetails: {
        /**
         * Indicates whether the notification subscription is active.
         */
        active?: boolean;
        /**
         * The version of the notification to which you are subscribing. To make sure that your integration can properly process the notification, subscribe to the same version as the API that you're using.
         */
        apiVersion?: number;
        /**
         * A description of the notification subscription configuration.
         */
        description?: string;
        /**
         * Contains objects that define event types and their subscription settings.
         */
        eventConfigs?: {
          /**
           * The type of event.
           *
           * Possible values: **ACCOUNT_CLOSED**, **ACCOUNT_CREATED**, **ACCOUNT_FUNDS_BELOW_THRESHOLD**, **ACCOUNT_HOLDER_CREATED**, **ACCOUNT_HOLDER_LIMIT_REACHED**, **ACCOUNT_HOLDER_PAYOUT**, **ACCOUNT_HOLDER_STATUS_CHANGE**, **ACCOUNT_HOLDER_STORE_STATUS_CHANGE**, **ACCOUNT_HOLDER_UPCOMING_DEADLINE**, **ACCOUNT_HOLDER_UPDATED**, **ACCOUNT_HOLDER_VERIFICATION**, **ACCOUNT_UPDATED**, **BENEFICIARY_SETUP**, **COMPENSATE_NEGATIVE_BALANCE**, **DIRECT_DEBIT_INITIATED**, **PAYMENT_FAILURE**, **REFUND_FUNDS_TRANSFER**, **REPORT_AVAILABLE**, **SCHEDULED_REFUNDS**, **TRANSFER_FUNDS**.
           */
          eventType:
            | "ACCOUNT_CLOSED"
            | "ACCOUNT_CREATED"
            | "ACCOUNT_FUNDS_BELOW_THRESHOLD"
            | "ACCOUNT_HOLDER_CREATED"
            | "ACCOUNT_HOLDER_LIMIT_REACHED"
            | "ACCOUNT_HOLDER_MIGRATED"
            | "ACCOUNT_HOLDER_PAYOUT"
            | "ACCOUNT_HOLDER_STATUS_CHANGE"
            | "ACCOUNT_HOLDER_STORE_STATUS_CHANGE"
            | "ACCOUNT_HOLDER_UPCOMING_DEADLINE"
            | "ACCOUNT_HOLDER_UPDATED"
            | "ACCOUNT_HOLDER_VERIFICATION"
            | "ACCOUNT_UPDATED"
            | "BENEFICIARY_SETUP"
            | "COMPENSATE_NEGATIVE_BALANCE"
            | "DIRECT_DEBIT_INITIATED"
            | "FUNDS_MIGRATED"
            | "PAYMENT_FAILURE"
            | "PENDING_CREDIT"
            | "REFUND_FUNDS_TRANSFER"
            | "REPORT_AVAILABLE"
            | "SCHEDULED_REFUNDS"
            | "SCORE_SIGNAL_TRIGGERED"
            | "TRANSFER_FUNDS"
            | "TRANSFER_NOT_PAIDOUT_TRANSFERS";
          /**
           * Indicates whether the specified `eventType` is sent to your webhook endpoint.
           * Possible values:
           * * **INCLUDE**: Send the specified `eventType`.
           * * **EXCLUDE**: Send all event types except the specified `eventType` and other event types with the `includeMode` set to **EXCLUDE**.
           */
          includeMode: "EXCLUDE" | "INCLUDE";
          [k: string]: unknown;
        }[];
        /**
         * A string with which to salt the notification(s) before hashing. If this field is provided, a hash value will be included under the notification header `HmacSignature` and the hash protocol will be included under the notification header `Protocol`. A notification body along with its `hmacSignatureKey` and `Protocol` can be used to calculate a hash value; matching this hash value with the `HmacSignature` will ensure that the notification body has not been tampered with or corrupted.
         *
         * >Must be a 32-byte hex-encoded string (i.e. a string containing 64 hexadecimal characters; e.g. "b0ea55c2fe60d4d1d605e9c385e0e7f7e6cafbb939ce07010f31a327a0871f27").
         *
         * The omission of this field will preclude the provision of the `HmacSignature` and `Protocol` headers in notification(s).
         */
        hmacSignatureKey?: string;
        /**
         * Adyen-generated ID for the entry, returned in the response when you create a notification configuration. Required when updating an existing configuration using [`/updateNotificationConfiguration`](https://docs.adyen.com/api-explorer/#/NotificationConfigurationService/latest/post/updateNotificationConfiguration).
         */
        notificationId?: number;
        /**
         * The password to use when accessing the notifyURL with the specified username.
         */
        notifyPassword?: string;
        /**
         * The URL to which the notifications are to be sent.
         */
        notifyURL?: string;
        /**
         * The username to use when accessing the notifyURL.
         */
        notifyUsername?: string;
        /**
         * The SSL protocol employed by the endpoint.
         * >Permitted values: `TLSv12`, `TLSv13`.
         */
        sslProtocol?: "TLSv12" | "TLSv13";
        [k: string]: unknown;
      };
      [k: string]: unknown;
    };
  };
}
